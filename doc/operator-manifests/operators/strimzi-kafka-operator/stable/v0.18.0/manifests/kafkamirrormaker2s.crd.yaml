apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition  #自定义k8s资源类型CRD
metadata:
  labels: {app: strimzi, strimzi.io/crd-install: 'true'}
  name: kafkamirrormaker2s.kafka.strimzi.io
spec:
  additionalPrinterColumns: #k8s打印
  - {JSONPath: .spec.replicas, description: The desired number of Kafka MirrorMaker
      2.0 replicas, name: Desired replicas, type: integer}
  group: kafka.strimzi.io
  names:
    categories: [strimzi]
    kind: KafkaMirrorMaker2
    listKind: KafkaMirrorMaker2List
    plural: kafkamirrormaker2s
    shortNames: [kmm2]
    singular: kafkamirrormaker2
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: The specification of the Kafka MirrorMaker 2.0 cluster. #打印规范
          properties:
            affinity:
              description: The pod's affinity rules. #pod关联规则
              properties:
                nodeAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          preference:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key: {type: string}
                                    operator: {type: string}
                                    values:
                                      items: {type: string}
                                      type: array
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key: {type: string}
                                    operator: {type: string}
                                    values:
                                      items: {type: string}
                                      type: array
                                  type: object
                                type: array
                            type: object
                          weight: {type: integer}
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      properties:
                        nodeSelectorTerms:
                          items:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key: {type: string}
                                    operator: {type: string}
                                    values:
                                      items: {type: string}
                                      type: array
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key: {type: string}
                                    operator: {type: string}
                                    values:
                                      items: {type: string}
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                  type: object
                podAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          podAffinityTerm:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              namespaces:
                                items: {type: string}
                                type: array
                              topologyKey: {type: string}
                            type: object
                          weight: {type: integer}
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key: {type: string}
                                    operator: {type: string}
                                    values:
                                      items: {type: string}
                                      type: array
                                  type: object
                                type: array
                              matchLabels: {type: object}
                            type: object
                          namespaces:
                            items: {type: string}
                            type: array
                          topologyKey: {type: string}
                        type: object
                      type: array
                  type: object
                podAntiAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          podAffinityTerm:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              namespaces:
                                items: {type: string}
                                type: array
                              topologyKey: {type: string}
                            type: object
                          weight: {type: integer}
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key: {type: string}
                                    operator: {type: string}
                                    values:
                                      items: {type: string}
                                      type: array
                                  type: object
                                type: array
                              matchLabels: {type: object}
                            type: object
                          namespaces:
                            items: {type: string}
                            type: array
                          topologyKey: {type: string}
                        type: object
                      type: array
                  type: object
              type: object
            clusters:
              description: Kafka clusters for mirroring.                                      #kafka集群
              items:
                properties:
                  alias: {description: Alias used to reference the Kafka cluster.,            #kafka引用别名
                    pattern: '^[a-zA-Z0-9\._\-]{1,100}$', type: string}
                  authentication:
                    description: Authentication configuration for connecting to the
                      cluster.                                                                #配置身份验证的集群
                    properties:
                      accessToken:
                        description: Link to Kubernetes Secret containing the access
                          token which was obtained from the authorization server.             #连接k8s集群需要的token
                        properties:
                          key: {description: 'The key under which the secret value
                              is stored in the Kubernetes Secret.', type: string}             #存储密钥的的secret
                          secretName: {description: 'The name of the Kubernetes Secret
                              containing the secret value.', type: string}                    #secret的名字
                        required: [key, secretName]
                        type: object
                      accessTokenIsJwt: {description: Configure whether access token
                          should be treated as JWT. This should be set to `false`
                          if the authorization server returns opaque tokens. Defaults
                          to `true`., type: boolean}                                           #配置访问token格式JWT，默认值是false
                      certificateAndKey:
                        description: Reference to the `Secret` which holds the certificate
                          and private key pair.                                                #引用secret和密钥key
                        properties:
                          certificate: {description: The name of the file certificate
                              in the Secret., type: string}                                    #文件证书名称
                          key: {description: The name of the private key in the Secret.,
                            type: string}                                                      #证书的key
                          secretName: {description: The name of the Secret containing
                              the certificate., type: string}                                  #secret的名称
                        required: [certificate, key, secretName]
                        type: object
                      clientId: {description: OAuth Client ID which the Kafka client
                          can use to authenticate against the OAuth server and use
                          the token endpoint URI., type: string}                               #对OAuth服务器验证和使用的token的url
                      clientSecret:
                        description: Link to Kubernetes Secret containing the OAuth
                          client secret which the Kafka client can use to authenticate
                          against the OAuth server and use the token endpoint URI. 
                                                                                               #url里包含OAuth的secret，kafka客户端使用secret进行OAuth身份验证
                        properties:
                          key: {description: The key under which the secret value
                              is stored in the Kubernetes Secret., type: string}               #k8s中secret的密钥
                          secretName: {description: The name of the Kubernetes Secret
                              containing the secret value., type: string}                      #k8s中的secret的名称
                        required: [key, secretName] 
                        type: object
                      disableTlsHostnameVerification: {description: Enable or disable
                          TLS hostname verification. Default value is `false`., type: boolean} #开启或者禁止TLS主机名验证，默认值false
                      maxTokenExpirySeconds: {description: Set or limit time-to-live
                          of the access tokens to the specified number of seconds.
                          This should be set if the authorization server returns opaque
                          tokens., type: integer}                                               #配置或者限制开启时间，如果返回opaque,则需要配置这个令牌
                      passwordSecret:
                        description: Reference to the `Secret` which holds the password.        #引用secret中得密码
                        properties:
                          password: {description: The name of the key in the Secret
                              under which the password is stored., type: string}                #k8s中secret的密码
                          secretName: {description: The name of the Secret containing
                              the password., type: string}                                      #k8s中secret的名称
                        required: [password, secretName]
                        type: object
                      refreshToken:
                        description: Link to Kubernetes Secret containing the refresh
                          token which can be used to obtain access token from the
                          authorization server.                                                 #连接k8s的secret，用户连接服务器授权
                        properties:
                          key: {description: The key under which the secret value
                              is stored in the Kubernetes Secret., type: string}                #k8s中secret的密钥
                          secretName: {description: The name of the Kubernetes Secret
                              containing the secret value., type: string}                       #k8s中的secret的名
                        required: [key, secretName]
                        type: object
                      scope: {description: OAuth scope to use when authenticating          
                          against the authorization server. Some authorization servers      
                          require this to be set. The possible values depend on how 
                          authorization server is configured. By default `scope` is
                          not specified when doing the token endpoint request., type: string}   #对授权服务器进行身份验证时使用的OAuth范围，默认情况下，在执行令牌端点请求时不指定“scope”
                      tlsTrustedCertificates:
                        description: Trusted certificates for TLS connection to the
                          OAuth server.                                                         #TLS连接到theOAuth服务器的可信证书
                        items:
                          properties:
                            certificate: {description: The name of the file certificate
                                in the Secret., type: string}                                   #文件证书名称
                            secretName: {description: The name of the Secret containing
                                the certificate., type: string}                                 #证书的名称
                          required: [certificate, secretName]
                          type: object
                        type: array
                      tokenEndpointUri: {description: 'Authorization server token endpoint
                          URI.', type: string}                                                  #授权服务器服务端的url地址
                      type:
                        description: Authentication type. Currently the only supported
                          types are `tls`, `scram-sha-512`, and `plain`. `scram-sha-512`
                          type uses SASL SCRAM-SHA-512 Authentication. `plain` type
                          uses SASL PLAIN Authentication. `oauth` type uses SASL OAUTHBEARER
                          Authentication. The `tls` type uses TLS Client Authentication.
                          The `tls` type is supported only over TLS connections.               #身份验证类型。目前支持的类型只有“tls”、“scram-sha-512”和“plain”。type使用SASL scraml -sha-512身份验证。“普通”类型使用SASL普通身份验证。“oauth”类型使用SASL OAUTHBEARERAuthentication。“tls”类型使用tls客户端身份验证。“tls”类型只在tls连接上被支持
                        enum: [tls, scram-sha-512, plain, oauth]
                        type: string
                      username: {description: Username used for the authentication.,           #认证用户名
                        type: string}
                    required: [type]
                    type: object
                  bootstrapServers: {description: 'A comma-separated list of `host:port`
                      pairs for establishing the connection to the Kafka cluster.',            #连接kafka集群，用逗号分开地址和端口
                    type: string}
                  config: {description: 'The MirrorMaker 2.0 cluster config. Properties
                      with the following prefixes cannot be set: ssl., sasl., security.,
                      listeners, plugin.path, rest., bootstrap.servers, consumer.interceptor.classes,
                      producer.interceptor.classes (with the exception of: ssl.endpoint.identification.algorithm,
                      ssl.cipher.suites, ssl.protocol, ssl.enabled.protocols).', type: object} #MirrorMaker 2.0集群配置，不能配置属性：ssl,sasl,security,listeners,plugin.path, rest., bootstrap.servers, consumer.interceptor.classes
                  tls:
                    description: TLS configuration for connecting MirrorMaker 2.0
                      connectors to a cluster.                                                 #MirrorMaker 2.0集群连接到集群的TLS配置
                    properties:
                      trustedCertificates:
                        description: Trusted certificates for TLS connection.                  #TLS证书配置
                        items:
                          properties:
                            certificate: {description: The name of the file certificate
                                in the Secret., type: string}                                  ##文件证书名称
                            secretName: {description: The name of the Secret containing
                                the certificate., type: string}                                #secret名称
                          required: [certificate, secretName]
                          type: object
                        type: array
                    type: object
                required: [alias, bootstrapServers]
                type: object
              type: array
            connectCluster: {description: The cluster alias used for Kafka Connect.
                The alias must match a cluster in the list at `spec.clusters`., type: string}  #kafka连接集群的别名
            externalConfiguration:
              description: Pass data from Secrets or ConfigMaps to the Kafka Connect
                pods and use them to configure connectors.                                     #配置配置文件从secrets或者cm传递到kafka的pod中
              properties:
                env:
                  description: Allows to pass data from Secret or ConfigMap to the
                    Kafka Connect pods as environment variables.                               #配置变量从secrets或者cm传递到kafka的pod中
                  items:
                    properties:
                      name: {description: Name of the environment variable which will
                          be passed to the Kafka Connect pods. The name of the environment
                          variable cannot start with `KAFKA_` or `STRIMZI_`., type: string}    #kafka的pod中传环境变量，不能以KAFKA_或者STRIMZI开头
                      valueFrom:
                        description: Value of the environment variable which will
                          be passed to the Kafka Connect pods. It can be passed either
                          as a reference to Secret or ConfigMap field. The field has
                          to specify exactly one Secret or ConfigMap.                          #环境变量传递到kafka容器中。必须指定对应的secret或者cm
                        properties:
                          configMapKeyRef:
                            description: Refernce to a key in a ConfigMap.                     #cm中引用的key
                            properties:
                              key: {type: string}
                              name: {type: string}
                              optional: {type: boolean}
                            type: object
                          secretKeyRef:
                            description: Reference to a key in a Secret.                       #Secret中引用的key
                            properties:
                              key: {type: string}
                              name: {type: string}
                              optional: {type: boolean}
                            type: object
                        type: object
                    required: [name, valueFrom]
                    type: object
                  type: array
                volumes:
                  description: Allows to pass data from Secret or ConfigMap to the
                    Kafka Connect pods as volumes.                                             #允许将secret或cm作为卷挂载到kafka的容器中
                  items:
                    properties:
                      configMap:
                        description: Reference to a key in a ConfigMap. Exactly one
                          Secret or ConfigMap has to be specified.                            #引用cm中的key，必须指定一个secret或者cm
                        properties:
                          defaultMode: {type: integer}
                          items:
                            items:
                              properties:
                                key: {type: string}
                                mode: {type: integer}
                                path: {type: string}
                              type: object
                            type: array
                          name: {type: string}
                          optional: {type: boolean}
                        type: object
                      name: {description: Name of the volume which will be added to
                          the Kafka Connect pods., type: string}                            #被添加引用到kafka的pod中的卷名
                      secret:
                        description: Reference to a key in a Secret. Exactly one Secret
                          or ConfigMap has to be specified.                                 #引用secret,指定一个secret或cm
                        properties:
                          defaultMode: {type: integer}
                          items:
                            items:
                              properties:
                                key: {type: string}
                                mode: {type: integer}
                                path: {type: string}
                              type: object
                            type: array
                          optional: {type: boolean}
                          secretName: {type: string}
                        type: object
                    required: [name]
                    type: object
                  type: array
              type: object
            image: {description: The docker image for the pods., type: string}            #docker启动容器的镜像
            jvmOptions:
              description: JVM Options for pods.                                          #配置pod
              properties:
                -XX: {description: A map of -XX options to the JVM., type: object}        #配置jvm
                -Xms: {description: -Xms option to to the JVM., pattern: '[0-9]+[mMgG]?', #配置jvm最小值
                  type: string}
                -Xmx: {description: -Xmx option to to the JVM., pattern: '[0-9]+[mMgG]?', #配置jvm最大值
                  type: string}
                gcLoggingEnabled: {description: Specifies whether the Garbage Collection
                    logging is enabled. The default is false., type: boolean}            #配置是否开启日志，默认false
                javaSystemProperties:
                  description: A map of additional system properties which will be
                    passed using the `-D` option to the JVM.                             #使用-D参数给JVM传系统参数映射
                  items:
                    properties:
                      name: {description: The system property name., type: string}       #系统参数名称
                      value: {description: The system property value., type: string}     #系统参数值
                    type: object
                  type: array
              type: object
            livenessProbe:
              description: Pod liveness checking.                                        #pod健康检查何时重启容器
              properties:
                failureThreshold: {description: Minimum consecutive failures for the
                    probe to be considered failed after having succeeded. Defaults
                    to 3. Minimum value is 1., type: integer}                            #当pod启动探针失败时，尝试重新探测最大探测3次，最小1次
                initialDelaySeconds: {description: The initial delay before first
                    the health is first checked., minimum: 0, type: integer}             #pod启动后开始探测
                periodSeconds: {description: How often (in seconds) to perform the 
                    probe. Default to 10 seconds. Minimum value is 1., type: integer}    #执行探测的频率 默认10秒，最小1秒
                successThreshold: {description: Minimum consecutive successes for
                    the probe to be considered successful after having failed. Defaults  
                    to 1. Must be 1 for liveness. Minimum value is 1., type: integer}     #在失败后，探针被认为成功的连续成功最小1
                timeoutSeconds: {description: The timeout for each attempted health
                    check., minimum: 0, type: integer}                                    #探针超时时间
              type: object
            logging:
              description: Logging configuration for Kafka Connect.                       #日志配置
              properties:
                loggers: {description: A Map from logger name to logger level., type: object} #日志级别
                name: {description: The name of the `ConfigMap` from which to get
                    the logging configuration., type: string}                               #通过cm获取日志级别
                type:
                  description: Logging type, must be either 'inline' or 'external'.         #日志类型，必须是inline或者external
                  enum: [inline, external]
                  type: string
              required: [type]
              type: object
            metrics: {description: 'The Prometheus JMX Exporter configuration. See
                https://github.com/prometheus/jmx_exporter for details of the structure
                of this configuration.', type: object}                                      #prometheus配置
            mirrors:
              description: Configuration of the MirrorMaker 2.0 connectors.                 #MirrorMaker 2.0配置
              items:
                properties:
                  checkpointConnector:
                    description: The specification of the Kafka MirrorMaker 2.0 checkpoint
                      connector.                                                            #MirrorMaker 2.0配置规范
                    properties:
                      config: {description: 'The Kafka Connector configuration. The
                          following properties cannot be set: connector.class, tasks.max.', #配置连接kafka连接器，无法配置以下属性connector.class, tasks.max
                        type: object}
                      pause: {description: Whether the connector should be paused.
                          Defaults to false., type: boolean}                                #连接器是否停止，默认false
                      tasksMax: {description: The maximum number of tasks for the
                          Kafka Connector., minimum: 1, type: integer}                      #最大任务数1
                    type: object
                  groupsBlacklistPattern: {description: A regular expression matching
                      the consumer groups to exclude from mirroring. Comma-separated
                      lists are also supported., type: string}                              #镜像中排除消费组的正则表达式，支持逗号分开
                  groupsPattern: {description: A regular expression matching the consumer
                      groups to be mirrored. Comma-separated lists are also supported.,     #镜像中使用者的正则表达式，支持逗号分开
                    type: string}
                  heartbeatConnector:
                    description: 'The specification of the Kafka MirrorMaker 2.0 heartbeat
                      connector.'                                                           #MirrorMaker 2.0心跳连接规范
                    properties:
                      config: {description: 'The Kafka Connector configuration. The
                          following properties cannot be set: connector.class, tasks.max.', #kafka连接器配置，无法配置connector.class, tasks.max
                        type: object}
                      pause: {description: Whether the connector should be paused.
                          Defaults to false., type: boolean}                                #连接器是否停止，默认false
                      tasksMax: {description: The maximum number of tasks for the
                          Kafka Connector., minimum: 1, type: integer}                      #最大连接任务数1
                    type: object
                  sourceCluster: {description: The alias of the source cluster used
                      by the Kafka MirrorMaker 2.0 connectors. The alias must match
                      a cluster in the list at `spec.clusters`., type: string}              #MirrorMaker 2.0连接器使用的源集群别名
                  sourceConnector:
                    description: The specification of the Kafka MirrorMaker 2.0 source
                      connector.                                                            #MirrorMaker 2.0连接规范
                    properties:
                      config: {description: 'The Kafka Connector configuration. The
                          following properties cannot be set: connector.class, tasks.max.', #kafka连接器配置，无法配connector.class, tasks.max
                        type: object}
                      pause: {description: Whether the connector should be paused.
                          Defaults to false., type: boolean}                                 #连接器是否停止，默认fals
                      tasksMax: {description: The maximum number of tasks for the
                          Kafka Connector., minimum: 1, type: integer}                      #最大连接任务数1
                    type: object
                  targetCluster: {description: The alias of the target cluster used
                      by the Kafka MirrorMaker 2.0 connectors. The alias must match
                      a cluster in the list at `spec.clusters`., type: string}              #MirrorMaker 2.0连接器使用的目标集群别名
                  topicsBlacklistPattern: {description: A regular expression matching
                      the topics to exclude from mirroring. Comma-separated lists
                      are also supported., type: string}                                    #匹配要从镜像中排除的主题的正则表达式
                  topicsPattern: {description: 'A regular expression matching the
                      topics to be mirrored, for example, "topic1\|topic2\|topic3". 
                      Comma-separated lists are also supported.', type: string}             #匹配要镜像的主题的正则表达式，支持逗号分开
                required: [sourceCluster, targetCluster]
                type: object
              type: array
            readinessProbe:
              description: Pod readiness checking.                                          #pod健康检查判断容器是否健康
              properties:
                failureThreshold: {description: Minimum consecutive failures for the
                    probe to be considered failed after having succeeded. Defaults
                    to 3. Minimum value is 1., type: integer}                               #当pod启动探针失败时，尝试重新探测最大探测3次，最小1次
                initialDelaySeconds: {description: The initial delay before first
                    the health is first checked., minimum: 0, type: integer}                #pod启动后开始探测
                periodSeconds: {description: How often (in seconds) to perform the
                    probe. Default to 10 seconds. Minimum value is 1., type: integer}       #执行探测的频率 默认10秒，最小1秒
                successThreshold: {description: Minimum consecutive successes for
                    the probe to be considered successful after having failed. Defaults
                    to 1. Must be 1 for liveness. Minimum value is 1., type: integer}       #在失败后，探针被认为成功的连续成功最小1
                timeoutSeconds: {description: The timeout for each attempted health
                    check., minimum: 0, type: integer}                                      #探针超时时间
              type: object
            replicas: {description: The number of pods in the Kafka Connect group.,         #kafka连接组中pod数量
              type: integer}
            resources:
              description: The maximum limits for CPU and memory resources and the
                requested initial resources.                                                #配置CPU和内存
              properties:
                limits: {type: object}
                requests: {type: object}
              type: object
            template:
              description: Template for Kafka Connect and Kafka Connect S2I resources.
                The template allows users to specify how the `Deployment`, `Pods`
                and `Service` are generated.                                               #Kafka Connect和Kafka Connect S2I资源的模板。模板允许用户指定如何生成“部署”、“Pods”和“Service”
              properties:
                apiService:
                  description: Template for Kafka Connect API `Service`.                  #kafka连接api模板
                  properties:
                    metadata:
                      description: Metadata which should be applied to the resource.       #用于资源的元数据
                      properties:
                        annotations: {description: 'Annotations which should be added
                            to the resource template. Can be applied to different
                            resources such as `StatefulSets`, `Deployments`, `Pods`,
                            and `Services`.', type: object}                                #资源注释
                        labels: {description: 'Labels which should be added to the
                            resource template. Can be applied to different resources
                            such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.', #资源标签
                          type: object}
                      type: object
                  type: object
                connectContainer:
                  description: Template for the Kafka Connect container.                    #kafka连接容器的模板
                  properties:
                    env:
                      description: Environment variables which should be applied to
                        the container.                                                      #容器的环境变量
                      items:
                        properties:
                          name: {description: The environment variable key., type: string}  #变量名
                          value: {description: The environment variable value., type: string} #变量值
                        type: object
                      type: array
                    securityContext:
                      description: Security context for the container.                       #容器安全上下文
                      properties:
                        allowPrivilegeEscalation: {type: boolean}
                        capabilities:
                          properties:
                            add:
                              items: {type: string}
                              type: array
                            drop:
                              items: {type: string}
                              type: array
                          type: object
                        privileged: {type: boolean}
                        procMount: {type: string}
                        readOnlyRootFilesystem: {type: boolean}
                        runAsGroup: {type: integer}
                        runAsNonRoot: {type: boolean}
                        runAsUser: {type: integer}
                        seLinuxOptions:
                          properties:
                            level: {type: string}
                            role: {type: string}
                            type: {type: string}
                            user: {type: string}
                          type: object
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec: {type: string}
                            gmsaCredentialSpecName: {type: string}
                          type: object
                      type: object
                  type: object
                deployment:
                  description: Template for Kafka Connect `Deployment`.           #连接kafka的deploy模板
                  properties:
                    metadata:
                      description: Metadata which should be applied to the resource. #应用到资源的元数据
                      properties:
                        annotations: {description: 'Annotations which should be added
                            to the resource template. Can be applied to different
                            resources such as `StatefulSets`, `Deployments`, `Pods`,
                            and `Services`.', type: object}                          #资源注释
                        labels: {description: 'Labels which should be added to the
                            resource template. Can be applied to different resources
                            such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.', #资源标签
                          type: object}
                      type: object
                  type: object
                pod:
                  description: Template for Kafka Connect `Pods`.           #连接kafka的pod模板
                  properties:
                    affinity:
                      description: The pod's affinity rules.
                      properties:
                        nodeAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  preference:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  weight: {type: integer}
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              properties:
                                nodeSelectorTerms:
                                  items:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                              type: object
                          type: object
                        podAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  weight: {type: integer}
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels: {type: object}
                                    type: object
                                  namespaces:
                                    items: {type: string}
                                    type: array
                                  topologyKey: {type: string}
                                type: object
                              type: array
                          type: object
                        podAntiAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  weight: {type: integer}
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels: {type: object}
                                    type: object
                                  namespaces:
                                    items: {type: string}
                                    type: array
                                  topologyKey: {type: string}
                                type: object
                              type: array
                          type: object
                      type: object
                    imagePullSecrets:
                      description: List of references to secrets in the same namespace
                        to use for pulling any of the images used by this Pod.        #启动pod使用的secret，必须在同一个namespace下
                      items:
                        properties:
                          name: {type: string}
                        type: object
                      type: array
                    metadata:
                      description: Metadata applied to the resource.                  #用于资源的元数据
                      properties:
                        annotations: {description: 'Annotations which should be added
                            to the resource template. Can be applied to different
                            resources such as `StatefulSets`, `Deployments`, `Pods`,
                            and `Services`.', type: object}                           #资源注释
                        labels: {description: 'Labels which should be added to the
                            resource template. Can be applied to different resources
                            such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.',
                          type: object}                                                #资源标签
                      type: object
                    priorityClassName: {description: The name of the Priority Class
                        to which these pods will be assigned., type: string}           #pod被分配到优先级
                    schedulerName: {description: 'The name of the scheduler used to
                        dispatch this `Pod`. If not specified, the default scheduler
                        will be used.', type: string}                                  #分配pod的调度器名称，没有指定，会使用默认的
                    securityContext:
                      description: Configures pod-level security attributes and common
                        container settings.                                            #配置pod安全属性和公共容器
                      properties:
                        fsGroup: {type: integer}
                        runAsGroup: {type: integer}
                        runAsNonRoot: {type: boolean}
                        runAsUser: {type: integer}
                        seLinuxOptions:
                          properties:
                            level: {type: string}
                            role: {type: string}
                            type: {type: string}
                            user: {type: string}
                          type: object
                        supplementalGroups:
                          items: {type: integer}
                          type: array
                        sysctls:
                          items:
                            properties:
                              name: {type: string}
                              value: {type: string}
                            type: object
                          type: array
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec: {type: string}
                            gmsaCredentialSpecName: {type: string}
                          type: object
                      type: object
                    terminationGracePeriodSeconds: {description: The grace period
                        is the duration in seconds after the processes running in
                        the pod are sent a termination signal and the time when the
                        processes are forcibly halted with a kill signal. Set this
                        value longer than the expected cleanup time for your process.Value
                        must be non-negative integer. The value zero indicates delete
                        immediately. Defaults to 30 seconds., minimum: 0, type: integer}   #配置pod宽限期，默认0立即删除pod，最小值0
                    tolerations:
                      description: The pod's tolerations.                                  #配置容忍
                      items:
                        properties:
                          effect: {type: string}
                          key: {type: string}
                          operator: {type: string}
                          tolerationSeconds: {type: integer}
                          value: {type: string}
                        type: object
                      type: array
                  type: object
                podDisruptionBudget:
                  description: Template for Kafka Connect `PodDisruptionBudget`. #podDisruptionBudget配置
                  properties:
                    maxUnavailable: {description: 'Maximum number of unavailable pods
                        to allow automatic Pod eviction. A Pod eviction is allowed
                        when the `maxUnavailable` number of pods or fewer are unavailable
                        after the eviction. Setting this value to 0 prevents all voluntary
                        evictions, so the pods must be evicted manually. Defaults
                        to 1.', minimum: 0, type: integer}                                  #允许最大驱逐pod数，maxUnavailable配置为0可以防止所有自愿驱逐，因此必须手动驱逐pods 默认为1,最低:0
                    metadata:
                      description: Metadata to apply to the `PodDistruptionBugetTemplate`
                        resource.
                      properties:
                        annotations: {description: 'Annotations which should be added
                            to the resource template. Can be applied to different
                            resources such as `StatefulSets`, `Deployments`, `Pods`,
                            and `Services`.', type: object}                                 #资源注释
                        labels: {description: 'Labels which should be added to the
                            resource template. Can be applied to different resources
                            such as `StatefulSets`, `Deployments`, `Pods`, and `Services`.', #资源标签
                          type: object}
                      type: object
                  type: object
              type: object
            tolerations:
              description: The pod's tolerations.                                            #pod容忍
              items:
                properties:
                  effect: {type: string}
                  key: {type: string}
                  operator: {type: string}
                  tolerationSeconds: {type: integer}
                  value: {type: string}
                type: object
              type: array
            tracing:
              description: The configuration of tracing in Kafka Connect.                   #在Kafka连接中跟踪的配置
              properties:
                type:
                  description: Type of the tracing used. Currently the only supported
                    type is `jaeger` for Jaeger tracing.                                    #所使用的跟踪的类型，目前唯一支持的类型是用于jaeger跟踪的“jaeger”
                  enum: [jaeger]
                  type: string
              required: [type]
              type: object
            version: {description: 'The Kafka Connect version. Defaults to {DefaultKafkaVersion}.
                Consult the user documentation to understand the process required
                to upgrade or downgrade the version.', type: string}                        #Kafka Connect版本，默认Defaultkafkaversion,
          required: [connectCluster]
          type: object
        status:
          description: The status of the Kafka MirrorMaker 2.0 cluster.                     #MirrorMaker 2.0集群状态
          properties:
            conditions:
              description: List of status conditions.                                       #状态列表
              items:
                properties:
                  lastTransitionTime: {description: 'Last time the condition of a
                      type changed from one status to another. The required format
                      is ''yyyy-MM-ddTHH:mm:ssZ'', in the UTC time zone.', type: string}    #上次资源类型状态
                  message: {description: Human-readable message indicating details
                      about the condition's last transition., type: string}                 #最终状态信息
                  reason: {description: The reason for the condition's last transition
                      (a single word in CamelCase)., type: string}                          #最后一次状态改变的原因
                  status: {description: 'The status of the condition, either True,
                      False or Unknown.', type: string}                                      #状态或者是true，或者是false，或者是未知
                  type: {description: 'The unique identifier of a condition, used
                      to distinguish between other conditions in the resource.', type: string} #条件唯一标识符
                type: object
              type: array
            connectorPlugins:
              description: The list of connector plugins available in this Kafka Connect
                deployment.                                                                   #在这个Kafka Connect部署中可用的连接器插件列表
              items:
                properties:
                  class: {description: The class of the connector plugin., type: string}      #连接器插件的类
                  type: {description: The type of the connector plugin. The available
                      types are `sink` and `source`., type: string}                           #连接器插件的类型
                  version: {description: The version of the connector plugin., type: string}  #连接器插件的版本
                type: object
              type: array
            connectors:
              description: List of MirrorMaker 2.0 connector statuses, as reported
                by the Kafka Connect REST API.                                                #API报告的MirrorMaker 2.0连接器状态列表
              items: {type: object}
              type: array
            observedGeneration: {description: The generation of the CRD that was last
                reconciled by the operator., type: integer}                                   #操作符最后调解的CRD的生成
            url: {description: The URL of the REST API endpoint for managing and monitoring
                Kafka Connect connectors., type: string}                                      #用于管理和监视Kafka连接连接器的REST API端点的URL
          type: object
  version: v1alpha1
  versions:
  - {name: v1alpha1, served: true, storage: true}

