apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels: {app: strimzi, strimzi.io/crd-install: 'true'}
  name: kafkausers.kafka.strimzi.io
spec:
  additionalPrinterColumns:
  - {JSONPath: .spec.authentication.type, description: 如何对用户进行身份验证,
    name: Authentication, type: string}
  - {JSONPath: .spec.authorization.type, description: 用户如何获得授权,
    name: Authorization, type: string}
  group: kafka.strimzi.io
  names:
    categories: [strimzi]
    kind: KafkaUser
    listKind: KafkaUserList
    plural: kafkausers
    shortNames: [ku]
    singular: kafkauser
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: 用户的规范。
          properties:
            authentication:
              description: 为这个Kafka用户启用了身份验证机制。
              properties:
                type:
                  description: 身份验证类型。
                  enum: [tls, scram-sha-512]
                  type: string
              required: [type]
              type: object
            authorization:
              description: Kafka用户的授权规则。
              properties:
                acls:
                  description: 应用于此用户的ACL规则列表。
                  items:
                    properties:
                      host: {description: 允许或拒绝ACL规则描述的操作的主机。, type: string}
                      operation:
                        description: '允许或拒绝的操作。 支持的操作是：Read, Write, Create, Delete, Alter, Describe,
                          ClusterAction, AlterConfigs, DescribeConfigs, IdempotentWrite
                          and All.'
                        enum: [Read, Write, Create, Delete, Alter, Describe, ClusterAction,
                          AlterConfigs, DescribeConfigs, IdempotentWrite, All]
                        type: string
                      resource:
                        description: 指示适用给定ACL规则的资源。
                        properties:
                          name: {description: 适用给定ACL规则的资源名称。 可以与`patternType`字段组合使用前缀模式。, type: string}
                          patternType:
                            description: 描述资源字段中使用的模式。 支持的类型是`literal`和`prefix`。 使用`literal`模式类型时，资源字段将用作全名的定义。 使用`prefix`模式类型时，资源名称将仅用作前缀。 默认值为“ literal”。
                            enum: [literal, prefix]
                            type: string
                          type:
                            description: 资源类型。 可用的资源类型为：`topic`, `group`, `cluster`, and `transactionalId`.
                            enum: [topic, group, cluster, transactionalId]
                            type: string
                        required: [type]
                        type: object
                      type:
                        description: 规则的类型。 当前唯一支持的类型是`allow`。 类型为allow的ACL规则用于允许用户执行指定的操作。 默认值为 `allow`.
                        enum: [allow, deny]
                        type: string
                    required: [operation, resource]
                    type: object
                  type: array
                type:
                  description: 授权类型。 当前唯一支持的类型是`simple`。`simple`授权类型使用Kafka的“ kafka.security.auth.SimpleAclAuthorizer”类进行授权。
                  enum: [simple]
                  type: string
              required: [acls, type]
              type: object
            quotas:
              description: 请求控制用户使用的代理资源的配额。 可以强制执行网络带宽和请求速率配额。有关Kafka用户配额的Kafka文档，请访问http://kafka.apache.org/documentation/#design_quotas。
              properties:
                consumerByteRate: {description: 在限制组中的客户端之前，每个客户端组可以从代理获取的每秒最大字节数配额。 在每个broker的基础上定义。, minimum: 0,
                  type: integer}
                producerByteRate: {description: 在限制组中的客户端之前，每个客户端组可以发布到代理的每秒最大字节数的配额。 在每个broker的基础上定义。, minimum: 0,
                  type: integer}
                requestPercentage: {description: '每个客户端组的最大CPU利用率的配额，以网络和I/O线程的百分比表示。',
                  minimum: 0, type: integer}
              type: object
          type: object
        status:
          description: Kafka用户的状态。
          properties:
            conditions:
              description: 状态条件列表。
              items:
                properties:
                  lastTransitionTime: {description: '上一次类型的条件从一种状态更改为另一种状态。 所需格式为“ yyyy-MM-ddTHH：mm：ssZ”，以UTC时区为准。', type: string}
                  message: {description: 可读的消息，指示关于条件最后一次转换的详细信息。, type: string}
                  reason: {description: 条件最后一次转换的原因（在CamelCase中为单个单词）。, type: string}
                  status: {description: '条件的状态，True,False 或 Unknown.', type: string}
                  type: {description: '条件的唯一标识符，用于区别资源中的其他条件。', type: string}
                type: object
              type: array
            observedGeneration: {description: 最后由Operator核对生成的CRD, type: integer}
            secret: {description:存储凭据的Secret的名称。,
              type: string}
            username: {description: 用户名., type: string}
          type: object
  version: v1beta1
  versions:
  - {name: v1beta1, served: true, storage: true}
  - {name: v1alpha1, served: true, storage: false}

