apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels: {app: strimzi, strimzi.io/crd-install: 'true'}
  name: kafkas.kafka.strimzi.io
spec:
  additionalPrinterColumns:
  - {JSONPath: .spec.kafka.replicas, description: 需要的Kafka集群副本数量, name: Desired Kafka replicas, type: integer}
  - {JSONPath: .spec.zookeeper.replicas, description: 需要的ZooKeeper集群副本数量, name: Desired ZK replicas, type: integer}
  group: kafka.strimzi.io
  names:
    categories: [strimzi]
    kind: Kafka
    listKind: KafkaList
    plural: kafkas
    shortNames: [k]
    singular: kafka
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: Kafka、ZooKeeper和Topic Operator设置.
          properties:
            clientsCa:
              description: 客户端CA配置.
              properties:
                certificateExpirationPolicy:
                  description: '当`generateCertificateAuthority=true`的时候，CA证书过期策略。缺省做法是复用已有私钥来生成一个
                    新的CA证书。'
                  enum: [renew-certificate, replace-key]
                  type: string
                generateCertificateAuthority: {description: '如果设置为true则CA证书会被自动生成，否则需要用户来提供一个CA证书
                  里面用到的保密证书, 缺省为true', type: boolean}
                renewalDays: {description: '证书更新周期（天数）。当`generateCertificateAuthority`设置为true的时候，系统会记
                  录一条关于证书失效倒计时的警告日志。缺省数值为30天', minimum: 1, type: integer}
                validityDays: {description: 生成证书有效周期，默认为365天。, minimum: 1, type: integer}
              type: object
            clusterCa:
              description: 集群CA配置.
              properties:
                certificateExpirationPolicy:
                  description: '当`generateCertificateAuthority=true`的时候，CA证书过期策略。缺省做法是复用已有私钥来生成一个
                    新的CA证书。'
                  enum: [renew-certificate, replace-key]
                  type: string
                generateCertificateAuthority: {description: '如果设置为true则CA证书会被自动生成，否则需要用户来提供一个CA证书
                  里面用到的保密证书, 缺省为true', type: boolean}
                renewalDays: {description: '证书更新周期（天数）。当`generateCertificateAuthority`设置为true的时候，系统会记
                  录一条关于证书失效倒计时的警告日志。缺省数值为30天', minimum: 1, type: integer}
                validityDays: {description: 生成证书有效周期，默认为365天。, minimum: 1, type: integer}
              type: object
            cruiseControl:
              description: 自动巡航控制配置，可以用来部署一个巡航控制实例。
              properties:
                brokerCapacity:
                  description: 巡航控制之Broker容量配置.
                  properties:
                    cpuUtilization: {description: Broker容量之CPU利用率百分比, maximum: 100, minimum: 0,
                      type: integer}
                    disk: {description: 'Broker容量之磁盘空间（单位字节，例如100Gi）', pattern: '^[0-9]+([.][0-9]*)?([KMGTPE]i?|e[0-9]+)?$',
                      type: string}
                    inboundNetwork: {description: 'Broker容量之入站网络吞吐量（单位bps，例如1000KB/s）',
                      pattern: '[0-9]+([KMG]i?)?B/s', type: string}
                    outboundNetwork: {description: 'Broker容量之出站网络吞吐量（单位bps，例如1000KB/s）', pattern: '[0-9]+([KMG]i?)?B/s',
                      type: string}
                  type: object
                config: {description: '自动巡航控制配置。完整配置参数请参考链接：
                    https://github.com/linkedin/cruise-control/wiki/Configurations.
                    注意用下列前缀开头的属性值不能被设置在这里：bootstrap.servers, client.id, zookeeper., network., security.,
                    failed.brokers.zk.path,webserver.http., webserver.api.urlprefix,
                    webserver.session.path, webserver.accesslog., two.step., request.reason.required,metric.reporter.sampler.bootstrap.servers,
                    metric.reporter.topic, partition.metric.sample.store.topic, broker.metric.sample.store.topic,capacity.config.file,
                    self.healing., anomaly.detection., ssl.', type: object}
                image: {description: 容器镜像地址, type: string}
                jvmOptions:
                  description: 自动巡航控制的容器内JVM参数.
                  properties:
                    -XX: {description: JVM的-XX参数列表., type: string}
                    -Xms: {description: JVM的-Xms参数列表., pattern: '[0-9]+[mMgG]?',
                      type: string}
                    -Xmx: {description: JVM的-Xmx参数列表., pattern: '[0-9]+[mMgG]?',
                      type: string}
                    gcLoggingEnabled: {description: 用于指定是否要打开GC日志，缺省是不打开, type: boolean}
                    javaSystemProperties:
                      description: 通过-D选项传递给JVM的额外系统参数
                      items:
                        properties:
                          name: {description: 系统属性名称, type: string}
                          value: {description: 系统属性数值, type: string}
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: 巡航控制之容器组存活检查.
                  properties:
                    failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                    initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                    periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                    successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                      type: integer}
                    timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                  type: object
                logging:
                  description: 巡航控制的日志配置(log4j1).
                  properties:
                    loggers: {description: 包含logger名称和级别的映射表,
                      type: object}
                    name: {description: 保存日志配置的配置字典名称, type: string}
                    type:
                      description: Logging类型，只能是[inline, external].
                      enum: [inline, external]
                      type: string
                  required: [type]
                  type: object
                readinessProbe:
                  description: 巡航控制的容器组可用性检查.
                  properties:
                    failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒., type: integer}
                    initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                    periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒., type: integer}
                    successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                      type: integer}
                    timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                  type: object
                resources:
                  description: 巡航控制功能所需的CPU和内存资源.
                  properties:
                    limits: {type: object}
                    requests: {type: object}
                  type: object
                template:
                  description: 用于控制巡航控制中部署和容器组生成的模板.
                  properties:
                    apiService:
                      description: 巡航控制的API服务模板.
                      properties:
                        metadata:
                          description: 应该被应用到资源上的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    cruiseControlContainer:
                      description: 巡航控制容器模板.
                      properties:
                        env:
                          description: 容器中的环境变量.
                          items:
                            properties:
                              name: {description: 环境变量的Key, type: string}
                              value: {description: 环境变量的Value,
                                type: string}
                            type: object
                          type: array
                        securityContext:
                          description: 容器中的安全相关配置.
                          properties:
                            allowPrivilegeEscalation: {type: boolean}
                            capabilities:
                              properties:
                                add:
                                  items: {type: string}
                                  type: array
                                drop:
                                  items: {type: string}
                                  type: array
                              type: object
                            privileged: {type: boolean}
                            procMount: {type: string}
                            readOnlyRootFilesystem: {type: boolean}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                      type: object
                    deployment:
                      description: 巡航控制中Deployment模板.
                      properties:
                        metadata:
                          description: 需要应用到资源上的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    pod:
                      description: 巡航控制Pods模板.
                      properties:
                        affinity:
                          description: 容器组的亲和性规则.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key: {type: string}
                                                    operator: {type: string}
                                                    values:
                                                      items: {type: string}
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels: {type: object}
                                            type: object
                                          namespaces:
                                            items: {type: string}
                                            type: array
                                          topologyKey: {type: string}
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key: {type: string}
                                                    operator: {type: string}
                                                    values:
                                                      items: {type: string}
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels: {type: object}
                                            type: object
                                          namespaces:
                                            items: {type: string}
                                            type: array
                                          topologyKey: {type: string}
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  type: array
                              type: object
                          type: object
                        imagePullSecrets:
                          description: 当前容器组拉取镜像必需的保密字典列表.
                          items:
                            properties:
                              name: {type: string}
                            type: object
                          type: array
                        metadata:
                          description: 需要应用到资源上的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                        priorityClassName: {description: 容器组优先级资源名, type: string}
                        schedulerName: {description: '调度当前容器组的scheduler名称，如果没有指定则采用缺省scheduler', type: string}
                        securityContext:
                          description: 配置容器组级别的安全相关属性和公共容器设置.
                          properties:
                            fsGroup: {type: integer}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            supplementalGroups:
                              items: {type: integer}
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name: {type: string}
                                  value: {type: string}
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                        terminationGracePeriodSeconds: {description: 从容器组内的进程收到终止信号到被杀死的时间间隔。这个时间
                                                          间隔设置需要大于进程清理所需时间。本设置只能是一个非负数值。如果为0
                                                          则表示立刻杀死清楚。缺省值为30秒,
                          minimum: 0, type: integer}
                        tolerations:
                          description: 容器组容忍规则.
                          items:
                            properties:
                              effect: {type: string}
                              key: {type: string}
                              operator: {type: string}
                              tolerationSeconds: {type: integer}
                              value: {type: string}
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: 巡航控制之干扰预算模板.
                      properties:
                        maxUnavailable: {description: '由于容器组被系统驱逐导致的最大不可用容器组数量。只有在容器组不可用数量小
                        于等于该数值的时候，新的容器组才可以允许被驱逐。把这个数值设置为0可以避免任何自发驱逐，而只接受手动驱逐。
                        缺省数值为1，最小值为0.', minimum: 0, type: integer}
                        metadata:
                          description: 应用到PodDistruptionBugetTemplate的元数据
                            resource.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    tlsSidecarContainer:
                      description: 巡航控制TLS sidecar配置模板.
                      properties:
                        env:
                          description: 容器内的环境变量.
                          items:
                            properties:
                              name: {description: 环境变量Key., type: string}
                              value: {description: 环境变量Value.,
                                type: string}
                            type: object
                          type: array
                        securityContext:
                          description: 容器组安全配置.
                          properties:
                            allowPrivilegeEscalation: {type: boolean}
                            capabilities:
                              properties:
                                add:
                                  items: {type: string}
                                  type: array
                                drop:
                                  items: {type: string}
                                  type: array
                              type: object
                            privileged: {type: boolean}
                            procMount: {type: string}
                            readOnlyRootFilesystem: {type: boolean}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                      type: object
                  type: object
                tlsSidecar:
                  description: TLS sidecar配置.
                  properties:
                    image: {description: 容器镜像地址., type: string}
                    livenessProbe:
                      description: 容器组存活性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    logLevel:
                      description: TLS sidecar的日志级别，缺省级别是Notice.
                      enum: [emerg, alert, crit, err, warning, notice, info, debug]
                      type: string
                    readinessProbe:
                      description: 容器组可用性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    resources:
                      description: 需要保留的CPU和内存资源.
                      properties:
                        limits: {type: object}
                        requests: {type: object}
                      type: object
                  type: object
              type: object
            entityOperator:
              description: Entity Operator配置.
              properties:
                affinity:
                  description: 容器组亲和性规则.
                  properties:
                    nodeAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              preference:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              weight: {type: integer}
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          properties:
                            nodeSelectorTerms:
                              items:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              type: array
                          type: object
                      type: object
                    podAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels: {type: object}
                                    type: object
                                  namespaces:
                                    items: {type: string}
                                    type: array
                                  topologyKey: {type: string}
                                type: object
                              weight: {type: integer}
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              namespaces:
                                items: {type: string}
                                type: array
                              topologyKey: {type: string}
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels: {type: object}
                                    type: object
                                  namespaces:
                                    items: {type: string}
                                    type: array
                                  topologyKey: {type: string}
                                type: object
                              weight: {type: integer}
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              namespaces:
                                items: {type: string}
                                type: array
                              topologyKey: {type: string}
                            type: object
                          type: array
                      type: object
                  type: object
                template:
                  description: Entity Operator 资源模板. 本模板可以让用户指定如何生成部署和容器组.
                  properties:
                    deployment:
                      description: Entity Operator 部署模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    pod:
                      description: Entity Operator 容器组模板.
                      properties:
                        affinity:
                          description: 容器组的亲和性规则.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key: {type: string}
                                                    operator: {type: string}
                                                    values:
                                                      items: {type: string}
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels: {type: object}
                                            type: object
                                          namespaces:
                                            items: {type: string}
                                            type: array
                                          topologyKey: {type: string}
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key: {type: string}
                                                    operator: {type: string}
                                                    values:
                                                      items: {type: string}
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels: {type: object}
                                            type: object
                                          namespaces:
                                            items: {type: string}
                                            type: array
                                          topologyKey: {type: string}
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  type: array
                              type: object
                          type: object
                        imagePullSecrets:
                          description: 当前容器组用来拉取镜像的保密字典应用列表.
                          items:
                            properties:
                              name: {type: string}
                            type: object
                          type: array
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                        priorityClassName: {description: 分配给容器组的优先级类的名字, type: string}
                        schedulerName: {description: '调度容器组的调度器名字，如果没有指定则会采用缺省调度器', type: string}
                        securityContext:
                          description: 设置容器组级别的安全属性和公共容器组参数.
                          properties:
                            fsGroup: {type: integer}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            supplementalGroups:
                              items: {type: integer}
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name: {type: string}
                                  value: {type: string}
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                        terminationGracePeriodSeconds: {description: 从容器组内的进程收到终止信号到被杀死的时间间隔。这个时间
                                                          间隔设置需要大于进程清理所需时间。本设置只能是一个非负数值。如果为0
                                                          则表示立刻杀死清楚。缺省值为30秒,
                          minimum: 0, type: integer}
                        tolerations:
                          description: 容器组容忍规则
                          items:
                            properties:
                              effect: {type: string}
                              key: {type: string}
                              operator: {type: string}
                              tolerationSeconds: {type: integer}
                              value: {type: string}
                            type: object
                          type: array
                      type: object
                    tlsSidecarContainer:
                      description: Entity Operator TLS sidecar容器模板.
                      properties:
                        env:
                          description: 应用到容器组的环境变量.
                          items:
                            properties:
                              name: {description: 环境变量Key., type: string}
                              value: {description: 环境变量Value.,
                                type: string}
                            type: object
                          type: array
                        securityContext:
                          description: 容器组的安全设置.
                          properties:
                            allowPrivilegeEscalation: {type: boolean}
                            capabilities:
                              properties:
                                add:
                                  items: {type: string}
                                  type: array
                                drop:
                                  items: {type: string}
                                  type: array
                              type: object
                            privileged: {type: boolean}
                            procMount: {type: string}
                            readOnlyRootFilesystem: {type: boolean}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                      type: object
                    topicOperatorContainer:
                      description: Entity Operator容器组模板.
                      properties:
                        env:
                          description: 应用到容器组的环境变量.
                          items:
                            properties:
                              name: {description: 环境变量Key., type: string}
                              value: {description: 环境变量Value.,
                                type: string}
                            type: object
                          type: array
                        securityContext:
                          description: 容器组的安全设置.
                          properties:
                            allowPrivilegeEscalation: {type: boolean}
                            capabilities:
                              properties:
                                add:
                                  items: {type: string}
                                  type: array
                                drop:
                                  items: {type: string}
                                  type: array
                              type: object
                            privileged: {type: boolean}
                            procMount: {type: string}
                            readOnlyRootFilesystem: {type: boolean}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                      type: object
                    userOperatorContainer:
                      description: Entity User Operator容器组模板.
                      properties:
                        env:
                          description: 应用到容器组的环境变量.
                          items:
                            properties:
                              name: {description: 环境变量Key., type: string}
                              value: {description: 环境变量Value.,
                                type: string}
                            type: object
                          type: array
                        securityContext:
                          description: 容器组的安全设置.
                          properties:
                            allowPrivilegeEscalation: {type: boolean}
                            capabilities:
                              properties:
                                add:
                                  items: {type: string}
                                  type: array
                                drop:
                                  items: {type: string}
                                  type: array
                              type: object
                            privileged: {type: boolean}
                            procMount: {type: string}
                            readOnlyRootFilesystem: {type: boolean}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                      type: object
                  type: object
                tlsSidecar:
                  description: TLS sidecar 配置.
                  properties:
                    image: {description: 容器组的镜像地址., type: string}
                    livenessProbe:
                      description: 容器组存活性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    logLevel:
                      description: TLS sidecar的日志级别，缺省级别为Notice.
                      enum: [emerg, alert, crit, err, warning, notice, info, debug]
                      type: string
                    readinessProbe:
                      description: 容器组可用性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    resources:
                      description: 需要保留的CPU和内存资源.
                      properties:
                        limits: {type: object}
                        requests: {type: object}
                      type: object
                  type: object
                tolerations:
                  description: 容器组容忍规则.
                  items:
                    properties:
                      effect: {type: string}
                      key: {type: string}
                      operator: {type: string}
                      tolerationSeconds: {type: integer}
                      value: {type: string}
                    type: object
                  type: array
                topicOperator:
                  description: Topic Operator.
                  properties:
                    image: {description: Topic Operator使用的镜像地址,
                      type: string}
                    jvmOptions:
                      description: 容器组的JVM参数.
                      properties:
                        -XX: {description: JVM的-XX选项参数表., type: object}
                        -Xms: {description: JVM的-Xms选项, pattern: '[0-9]+[mMgG]?',
                          type: string}
                        -Xmx: {description: JVM的-Xmx选项, pattern: '[0-9]+[mMgG]?',
                          type: string}
                        gcLoggingEnabled: {description: GC日志开关，默认关闭,
                          type: boolean}
                        javaSystemProperties:
                          description: 通过-D传递给JVM的额外系统属性.
                          items:
                            properties:
                              name: {description: 系统属性名称., type: string}
                              value: {description: 系统属性数值, type: string}
                            type: object
                          type: array
                      type: object
                    livenessProbe:
                      description: 容器组存活性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    logging:
                      description: 日志配置.
                      properties:
                        loggers: {description: 从logger名称到logger级别映射.,
                          type: object}
                        name: {description: 用来获取日志配置的配置字典名称, type: string}
                        type:
                          description: 日志类型，只能是inline或者external.
                          enum: [inline, external]
                          type: string
                      required: [type]
                      type: object
                    readinessProbe:
                      description: 容器组可用性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    reconciliationIntervalSeconds: {description: 控制器周期性调用的时间间隔, minimum: 0, type: integer}
                    resources:
                      description: 需要保留的CPU和内存资源.
                      properties:
                        limits: {type: object}
                        requests: {type: object}
                      type: object
                    topicMetadataMaxAttempts: {description: 尝试获取主体元数据的最大次数, minimum: 0, type: integer}
                    watchedNamespace: {description: Topic Operator需要监控的命名空间, type: string}
                    zookeeperSessionTimeoutSeconds: {description: ZooKeeper会话超时时间, minimum: 0, type: integer}
                  type: object
                userOperator:
                  description: User Operator 配置.
                  properties:
                    image: {description: User Operator使用的镜像地址,
                      type: string}
                    jvmOptions:
                      description: 容器组的JVM参数.
                      properties:
                        -XX: {description: JVM的-XX选项参数表., type: object}
                        -Xms: {description: JVM的-Xms选项, pattern: '[0-9]+[mMgG]?',
                          type: string}
                        -Xmx: {description: JVM的-Xmx选项, pattern: '[0-9]+[mMgG]?',
                          type: string}
                        gcLoggingEnabled: {description: GC日志开关，默认关闭,
                          type: boolean}
                        javaSystemProperties:
                          description: 通过-D传递给JVM的额外系统属性.
                          items:
                            properties:
                              name: {description: 系统属性名称, type: string}
                              value: {description: 系统属性数值, type: string}
                            type: object
                          type: array
                      type: object
                    livenessProbe:
                      description: 容器组存活性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    logging:
                      description: 日志配置.
                      properties:
                        loggers: {description: 从logger名称到logger级别映射.,
                          type: object}
                        name: {description: 用来获取日志配置的配置字典名称, type: string}
                        type:
                          description: 日志类型，只能是inline或者external.
                          enum: [inline, external]
                          type: string
                      required: [type]
                      type: object
                    readinessProbe:
                      description: 容器组可用性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    reconciliationIntervalSeconds: {description: 控制器周期性调用的时间间隔, minimum: 0, type: integer}
                    resources:
                      description: 需要保留的CPU和内存资源.
                      properties:
                        limits: {type: object}
                        requests: {type: object}
                      type: object
                    watchedNamespace: {description: User Operator监控的命名空间名称, type: string}
                    zookeeperSessionTimeoutSeconds: {description: ZooKeeper会话超时时间, minimum: 0, type: integer}
                  type: object
              type: object
            jmxTrans:
              description: JmxTrans配置. 当这个配置存在的时候，系统会创建JmxTrans的部署来收集每个Kafka broker的JMX metrics
                信息。更多详情请看https://github.com/jmxtrans/jmxtrans[JmxTrans GitHub].
              properties:
                image: {description: JmxTrans 镜像地址, type: string}
                kafkaQueries:
                  description: 发送到Kafka Broker集群的查询，来获取从每个broker查询的数据种类。更多关于这些属性的定义，参考
                    xref:type-JmxTransQueryTemplate-reference[`JmxTransQueryTemplate` schema reference].
                  items:
                    properties:
                      attributes:
                        description: 用来确定哪个目标MBean的属性应该被包含.
                        items: {type: string}
                        type: array
                      outputs:
                        description: spec.kafka.jmxTrans.outputDefinitions 指定的输出规格名字，包括JMX metrics的输出格式和
                          推送到哪里等
                        items: {type: string}
                        type: array
                      targetMBean: {description: 如果不是采用特定的一个MBean，而是通配符，那么会从多个MBeans里面采集数据。如果
                                      指定了特定的MBean，则只会从该MBean中获取数据。, type: string}
                    required: [targetMBean, attributes, outputs]
                    type: object
                  type: array
                logLevel: {description: '设置JmxTrans部署的日志级别。更多信息，请参考
                    https://github.com/jmxtrans/jmxtrans-agent/wiki/Troubleshooting[JmxTrans
                    Logging Level].', type: string}
                outputDefinitions:
                  description: 定义了后面会引用到的输出主机名称，更多信息可以参考
                    xref:type-JmxTransOutputDefinitionTemplate-reference[`JmxTransOutputDefinitionTemplate`
                    schema reference].
                  items:
                    properties:
                      flushDelayInSeconds: {description: JmxTrans在推送新的数据之前需要等待的时间，单位为秒, type: integer}
                      host: {description: 推送数据的目标主机的域名或者主机名, type: string}
                      name: {description: 输出设置模板，用来指定查询结果的发送目标地址, type: string}
                      outputType: {description: '输出数据格式，更多信息请参考
                          https://github.com/jmxtrans/jmxtrans/wiki/OutputWriters[JmxTrans OutputWriters].', type: string}
                      port: {description: 推送数据的目标主机端口, type: integer}
                      typeNames:
                        description: 在模糊查询中用来过滤数据的模板，更多信息请参考
                          https://github.com/jmxtrans/jmxtrans/wiki/Queries[JmxTrans
                          queries].
                        items: {type: string}
                        type: array
                    required: [outputType, name]
                    type: object
                  type: array
                resources:
                  description: 需要保留的CPU和内存资源.
                  properties:
                    limits: {type: object}
                    requests: {type: object}
                  type: object
                template:
                  description: JmxTrans 资源模板.
                  properties:
                    container:
                      description: JmxTrans 容器模板.
                      properties:
                        env:
                          description: 应用到容器组的环境变量.
                          items:
                            properties:
                              name: {description: 环境变量Key., type: string}
                              value: {description: 环境变量Value.,
                                type: string}
                            type: object
                          type: array
                        securityContext:
                          description: 容器组的安全设置.
                          properties:
                            allowPrivilegeEscalation: {type: boolean}
                            capabilities:
                              properties:
                                add:
                                  items: {type: string}
                                  type: array
                                drop:
                                  items: {type: string}
                                  type: array
                              type: object
                            privileged: {type: boolean}
                            procMount: {type: string}
                            readOnlyRootFilesystem: {type: boolean}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                      type: object
                    deployment:
                      description: JmxTrans 部署模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    pod:
                      description: JmxTrans 容器组模板.
                      properties:
                        affinity:
                          description: 容器组亲和性规则.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key: {type: string}
                                                    operator: {type: string}
                                                    values:
                                                      items: {type: string}
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels: {type: object}
                                            type: object
                                          namespaces:
                                            items: {type: string}
                                            type: array
                                          topologyKey: {type: string}
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key: {type: string}
                                                    operator: {type: string}
                                                    values:
                                                      items: {type: string}
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels: {type: object}
                                            type: object
                                          namespaces:
                                            items: {type: string}
                                            type: array
                                          topologyKey: {type: string}
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  type: array
                              type: object
                          type: object
                        imagePullSecrets:
                          description: 当前容器组用来拉取镜像的保密字典应用列表.
                          items:
                            properties:
                              name: {type: string}
                            type: object
                          type: array
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                        priorityClassName: {description: 分配给容器组的优先级类的名字, type: string}
                        schedulerName: {description: '调度容器组的调度器名字，如果没有指定则会采用缺省调度器', type: string}
                        securityContext:
                          description: 设置容器组级别的安全属性和公共容器组参数.
                          properties:
                            fsGroup: {type: integer}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            supplementalGroups:
                              items: {type: integer}
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name: {type: string}
                                  value: {type: string}
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                        terminationGracePeriodSeconds: {description: 从容器组内的进程收到终止信号到被杀死的时间间隔。这个时间
                                                          间隔设置需要大于进程清理所需时间。本设置只能是一个非负数值。如果为0
                                                          则表示立刻杀死清楚。缺省值为30秒,
                          minimum: 0, type: integer}
                        tolerations:
                          description: 容器组容忍规则.
                          items:
                            properties:
                              effect: {type: string}
                              key: {type: string}
                              operator: {type: string}
                              tolerationSeconds: {type: integer}
                              value: {type: string}
                            type: object
                          type: array
                      type: object
                  type: object
              required: [outputDefinitions, kafkaQueries]
              type: object
            kafka:
              description: Kafka 集群配置.
              properties:
                affinity:
                  description: 容器组亲和性规则.
                  properties:
                    nodeAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              preference:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              weight: {type: integer}
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          properties:
                            nodeSelectorTerms:
                              items:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              type: array
                          type: object
                      type: object
                    podAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels: {type: object}
                                    type: object
                                  namespaces:
                                    items: {type: string}
                                    type: array
                                  topologyKey: {type: string}
                                type: object
                              weight: {type: integer}
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              namespaces:
                                items: {type: string}
                                type: array
                              topologyKey: {type: string}
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels: {type: object}
                                    type: object
                                  namespaces:
                                    items: {type: string}
                                    type: array
                                  topologyKey: {type: string}
                                type: object
                              weight: {type: integer}
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              namespaces:
                                items: {type: string}
                                type: array
                              topologyKey: {type: string}
                            type: object
                          type: array
                      type: object
                  type: object
                authorization:
                  description: Kafka brokers 权限设置.
                  properties:
                    clientId: {description: 用来和OAuth服务器鉴权和使用token endpoint URI的OAuth客户端ID, type: string}
                    delegateToKafkaAcls: {description: 如果被Keycloak授权服务拒绝之后，是否把授权决定代理给Simple授权组件，缺省值为false, type: boolean}
                    disableTlsHostnameVerification: {description: 是否打开TLS主机名验证，缺省值为false, type: boolean}
                    superUsers:
                      description: 超级用户列表，其中每个用户都具有无限制的访问权限.
                      items: {type: string}
                      type: array
                    tlsTrustedCertificates:
                      description: 到OAuth服务器TLS链接的可信证书.
                      items:
                        properties:
                          certificate: {description: 保密字典中文件证书名字, type: string}
                          secretName: {description: 包含证书的保密字典名称, type: string}
                        required: [certificate, secretName]
                        type: object
                      type: array
                    tokenEndpointUri: {description: 授权服务器token endpoint URI., type: string}
                    type:
                      description: 授权类型，目前仅支持Simple类型。Simple授权类型使用Kafka的`kafka.security.auth.SimpleAclAuthorizer`类来鉴权
                      enum: [simple, keycloak]
                      type: string
                  required: [type]
                  type: object
                brokerRackInitImage: {description: 用来初始化`broker.rack`的init容器镜像, type: string}
                config: {description: 'Kafka broker配置. 以下列前缀开头的属性不能在这里设置: listeners, advertised., broker.,
                    listener., host.name, port, inter.broker.listener.name, sasl.,
                    ssl., security., password., principal.builder.class, log.dir,
                    zookeeper.connect, zookeeper.set.acl, authorizer., super.user,
                    cruise.control.metrics.topic, cruise.control.metrics.reporter.bootstrap.servers
                    (with the exception of: zookeeper.connection.timeout.ms, ssl.cipher.suites,
                    ssl.protocol, ssl.enabled.protocols,cruise.control.metrics.topic.num.partitions,
                    cruise.control.metrics.topic.replication.factor, cruise.control.metrics.topic.retention.ms).',
                  type: object}
                image: {description: 容器组镜像地址，缺省值是在 Kafka.spec.kafka.version字段设置的., type: string}
                jmxOptions:
                  description: Kafka brokers用到的JMX选项.
                  properties:
                    authentication:
                      description: 连接到Kafka JMX 端口的鉴权配置.
                      properties:
                        type:
                          description: 鉴权类型，目前仅仅支持password类型。password类型会创建一个用户和受保护端口，不使用TLS.
                          enum: [password]
                          type: string
                      required: [type]
                      type: object
                  type: object
                jvmOptions:
                  description: 容器组的JVM参数.
                  properties:
                    -XX: {description: JVM的-XX选项参数表., type: object}
                    -Xms: {description: JVM的-Xms选项, pattern: '[0-9]+[mMgG]?',
                      type: string}
                    -Xmx: {description: JVM的-Xmx选项, pattern: '[0-9]+[mMgG]?',
                      type: string}
                    gcLoggingEnabled: {description: GC日志开关，默认关闭, type: boolean}
                    javaSystemProperties:
                      description: 通过-D传递给JVM的额外系统属性.
                      items:
                        properties:
                          name: {description: 系统属性名称, type: string}
                          value: {description: 系统属性数值, type: string}
                        type: object
                      type: array
                  type: object
                listeners:
                  description: Kafka brokers listener 配置
                  properties:
                    external:
                      description: 9094端口的外部listener配置.
                      properties:
                        authentication:
                          description: Kafka brokers的鉴权配置
                          properties:
                            accessTokenIsJwt: {description: 是否访问token会被当做JWT来处理。如果鉴权服务器返回Opaque token，
                                                 则这里必须设置为false。默认为true, type: boolean}
                            checkAccessTokenType: {description: 设置是否进行访问token的类型检查。如果鉴权服务器返回的
                                                     JWT token不包含'typ'声明，
                                                     那么这里应该被设置为false。默认为true, type: boolean}
                            checkIssuer: {description: 是否打开对Issuer的检查。缺省Issuer是用配置在validIssuerUri的值来检查
                                                  的，默认为true, type: boolean}
                            clientId: {description: OAuth Client ID，Kafka broker用来到鉴权服务器上鉴权以及在
                                         introspect endpoint URI中使用, type: string}
                            clientSecret:
                              description: 包含OAuth客户端保密字典的K8S保密字典，Kafka broker用来到鉴权服务器上鉴权以及在
                                introspect endpoint URI中使用.
                              properties:
                                key: {description: 用来保存K8S保密字典的Key值., type: string}
                                secretName: {description: 包含secret value的保密字典名称, type: string}
                              required: [key, secretName]
                              type: object
                            disableTlsHostnameVerification: {description: 是否使能TLS主机名校验，默认是false, type: boolean}
                            enableECDSA: {description: 是否通过安装BouncyCastle crypto provider来使能ECDSA支持，缺省是false., type: boolean}
                            fallbackUserNameClaim: {description: 当通过userNameClaim字段指定的声明不存在的情况下采用的替补用户声明。This is useful
                                when `client_credentials` authentication only results
                                in the client id being provided in another claim.
                                It only takes effect if `userNameClaim` is set., type: string}
                            fallbackUserNamePrefix: {description: '和fallbackUserNameClaim搭配使用来组成user id。
                            仅在fallbackUserNameClaim为true的情况下有效。把用户名和客户端id映射到同一个user id空间，可以避免命名冲突', type: string}
                            introspectionEndpointUri: {description: '用来验证non-JWT token的token检查点（URI of the token introspection endpoint', type: string}
                            jwksEndpointUri: {description: 'URI of the JWKS certificate
                                endpoint, 可用来进行本地JWT验证',
                              type: string}
                            jwksExpirySeconds: {description: '设置JWKS证书的有效期。该数值应该比由
                                                  jwksRefreshSeconds指定的刷新间隔长至少60秒。默认是360秒。', minimum: 1, type: integer}
                            jwksRefreshSeconds: {description: '设置JWKS证书多久刷新一次。刷新间隔要比
                                                   jwksExpirySeconds指定的超时间隔少至少60秒。默认为300秒。', minimum: 1, type: integer}
                            tlsTrustedCertificates:
                              description: 和OAuth服务器之间的TLS连接采用的可信证书.
                              items:
                                properties:
                                  certificate: {description: 保密字典中的文件证书名称, type: string}
                                  secretName: {description: 包含证书的保密字典名称, type: string}
                                required: [certificate, secretName]
                                type: object
                              type: array
                            type:
                              description: 鉴权类型。 oauth type uses
                                SASL OAUTHBEARER Authentication. scram-sha-512 type
                                uses SASL SCRAM-SHA-512 Authentication. tls type
                                uses TLS Client Authentication. tls type只能用于TLS listeners.
                              enum: [tls, scram-sha-512, oauth]
                              type: string
                            userInfoEndpointUri: {description: '当检查点（Introspection Endpoint）不返回可用于user id的信息
                                时，可用于获取user id的用户信息获取URI', type: string}
                            userNameClaim: {description: '可用来提取user id的JWT鉴权token、Introspection Endpoint response                                                                                  或者User Info Endpoint response中声明的用户名，默认为sub', type: string}
                            validIssuerUri: {description: 用于鉴权的token颁发者的URI, type: string}
                            validTokenType: {description: 'Introspection Endpoint返回的token_type，没有默认值，也不会被检查有效性', type: string}
                          required: [type]
                          type: object
                        class: {description: '设置采用哪个Ingress控制器的Ingress类。默认为nginx', type: string}
                        configuration:
                          description: 外部listener配置.
                          properties:
                            bootstrap:
                              description: 外部bootstrap ingress配置.
                              properties:
                                address: {description: bootstrap服务的额外地址名称。该地址会被添加到TLS证书中
                                            可选名字列表（the list of subject alternative names of the
                                            TLS certificates）中, type: string}
                                dnsAnnotations: {description: 用来添加到Ingress资源上的Annotations。可以用这个字段来配置DNS
                                                   提供商，例如外部DNS, type: object}
                                host: {description: 用于Ingress资源的bootstrap route的主机名,
                                  type: string}
                              required: [host]
                              type: object
                            brokerCertChainAndKey:
                              description: 用于保存证书和私钥的保密字典引用，证书可以包含整个证书链.
                              properties:
                                certificate: {description: 保密字典中文件证书名字, type: string}
                                key: {description: 保密字典中的私钥名称, type: string}
                                secretName: {description: 包含证书的保密字典名称, type: string}
                              required: [certificate, key, secretName]
                              type: object
                            brokers:
                              description: 外部broker ingress配置.
                              items:
                                properties:
                                  advertisedHost: {description: 用于advertised.brokers中的broker字段的主机名,
                                    type: string}
                                  advertisedPort: {description: 用于advertised.brokers中的broker字段的端口名,
                                    type: integer}
                                  broker: {description: Kafka broker id, type: integer}
                                  dnsAnnotations: {description: 用于添加到单个broker的Ingress资源上的Annotations。可以用这
                                                     个字段来配置DNS提供商名称，例如External DNS, type: object}
                                  host: {description: broker ingress主机名，用于Ingress资源,
                                    type: string}
                                required: [host]
                                type: object
                              type: array
                          type: object
                        networkPolicyPeers:
                          description: '可以连接到本Listener的网络对端列表。本列表中的网络对端是通过OR操作拼接在一起。
                          如果本字段为空，所有连接都被可以连接到这个Listener。如果这个配置存在并且有至少一个条目，
                          则只有匹配其中一个条目的连接才可以被允许'
                          items:
                            properties:
                              ipBlock:
                                properties:
                                  cidr: {type: string}
                                  except:
                                    items: {type: string}
                                    type: array
                                type: object
                              namespaceSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              podSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                            type: object
                          type: array
                        overrides:
                          description: 外部bootstrap、broker服务和外部advertised addresses的覆盖设置
                          properties:
                            bootstrap:
                              description: 外部bootstrap service配置.
                              properties:
                                address: {description: bootstrap服务的额外地址名称。该地址会被添加到TLS证书中
                                            可选名字列表（the list of subject alternative names of the
                                            TLS certificates）中, type: string}
                                dnsAnnotations: {description: 用来添加到Service资源上的Annotations。可以用这个字段来配置DNS提供商，例如外部DNS, type: object}
                                nodePort: {description: Bootstrap service的Node port, type: integer}
                              type: object
                            brokers:
                              description: 外部broker services配置.
                              items:
                                properties:
                                  advertisedHost: {description: 用于broker(advertised.brokers)的主机名,
                                    type: string}
                                  advertisedPort: {description: 用于broker(advertised.brokers)的端口号,
                                    type: integer}
                                  broker: {description: Kafka broker id(broker identifier)., type: integer}
                                  dnsAnnotations: {description: 用于添加到单个broker中Service资源的Annotations。可以用这个
                                                     字段来配置DNS提供商，例如External DNS, type: object}
                                  nodePort: {description: 用于broker服务的Node port, type: integer}
                                type: object
                              type: array
                          type: object
                        tls: {description: 是否打开本Listener的TLS加密，默认是true,
                          type: boolean}
                        type:
                          description: "外部Listener类型。目前仅支持LoadBalancer和Nodeport两种来暴露Kafka服务"
                          enum: [loadbalancer, nodeport, ingress]
                          type: string
                      required: [type]
                      type: object
                    plain:
                      description: 配置9092端口的明文Listener.
                      properties:
                        authentication:
                          description: '本Listener的鉴权配置。既然本Listener不支持TLS传输，你不能在这里配置TLS的鉴权类型'
                          properties:
                            accessTokenIsJwt: {description: 是否访问token会被当做JWT来处理。如果鉴权服务器返回Opaque token，
                                                 则这里必须设置为false。默认为true, type: boolean}
                            checkAccessTokenType: {description: 设置是否进行访问token的类型检查。如果鉴权服务器返回的
                                                     JWT token不包含'typ'声明，
                                                     那么这里应该被设置为false。默认为true, type: boolean}
                            checkIssuer: {description: 是否打开对Issuer的检查。缺省Issuer是用配置在validIssuerUri的值来检查
                                            的，默认为true, type: boolean}
                            clientId: {description: OAuth Client ID，Kafka broker用来到鉴权服务器上鉴权以及在
                                         introspect endpoint URI中使用, type: string}
                            clientSecret:
                              description: 包含OAuth客户端保密字典的K8S保密字典，Kafka broker用来到鉴权服务器上鉴权以及在
                                introspect endpoint URI中使用
                              properties:
                                key: {description: 用来保存K8S保密字典的Key值, type: string}
                                secretName: {description: 包含secret value的保密字典名称, type: string}
                              required: [key, secretName]
                              type: object
                            disableTlsHostnameVerification: {description: 是否使能TLS主机名校验，默认是false, type: boolean}
                            enableECDSA: {description: 是否通过安装BouncyCastle crypto provider来使能ECDSA支持，缺省是false., type: boolean}
                            fallbackUserNameClaim: {description: 当通过userNameClaim字段指定的声明不存在的情况下采用的替补用户声明。This is useful
                                                      when `client_credentials` authentication only results
                                                      in the client id being provided in another claim.
                                                      It only takes effect if `userNameClaim` is set., type: string}
                            fallbackUserNamePrefix: {description: '和fallbackUserNameClaim搭配使用来组成user id。
                                仅在fallbackUserNameClaim为true的情况下有效。把用户名和客户端id映射到同一个user id空间，可以
                                避免命名冲突', type: string}
                            introspectionEndpointUri: {description: 用来验证non-JWT token的token检查点
                                                         （URI of the token introspection endpoint, type: string}
                            jwksEndpointUri: {description: 'URI of the JWKS certificate endpoint, 可用来进行本地JWT验证',
                              type: string}
                            jwksExpirySeconds: {description: 设置JWKS证书的有效期。该数值应该比由
                                                  jwksRefreshSeconds指定的刷新间隔长至少60秒。默认是360秒。, minimum: 1, type: integer}
                            jwksRefreshSeconds: {description: 设置JWKS证书多久刷新一次。刷新间隔要比
                                                   jwksExpirySeconds指定的超时间隔少至少60秒。默认为300秒。, minimum: 1, type: integer}
                            tlsTrustedCertificates:
                              description: 和OAuth服务器之间的TLS连接采用的可信证书.
                              items:
                                properties:
                                  certificate: {description: 保密字典中的文件证书名称, type: string}
                                  secretName: {description: 包含证书的保密字典名称, type: string}
                                required: [certificate, secretName]
                                type: object
                              type: array
                            type:
                              description: 鉴权类型。 oauth type uses
                                SASL OAUTHBEARER Authentication. scram-sha-512 type
                                uses SASL SCRAM-SHA-512 Authentication. tls type
                                uses TLS Client Authentication. tls type只能用于TLS listeners.
                              enum: [tls, scram-sha-512, oauth]
                              type: string
                            userInfoEndpointUri: {description: '当检查点（Introspection Endpoint）不返回可用于user id的信
                                息时，可用于获取user id的用户信息获取URI', type: string}
                            userNameClaim: {description: '可用来提取user id的JWT鉴权token、Introspection Endpoint response                                                                                  或者User Info Endpoint response中声明的用户名，默认为sub', type: string}
                            validIssuerUri: {description: 用于鉴权的token颁发者的URI, type: string}
                            validTokenType: {description: 'Introspection Endpoint返回的token_type，没有默认值，也不会被检查有效性', type: string}
                          required: [type]
                          type: object
                        networkPolicyPeers:
                          description: '可以连接到本Listener的网络对端列表。本列表中的网络对端是通过OR操作拼接在一起。
                          如果本字段为空，所有连接都被可以连接到这个Listener。如果这个配置存在并且有至少一个条目，
                          则只有匹配其中一个条目的连接才可以被允许'
                          items:
                            properties:
                              ipBlock:
                                properties:
                                  cidr: {type: string}
                                  except:
                                    items: {type: string}
                                    type: array
                                type: object
                              namespaceSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              podSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                            type: object
                          type: array
                      type: object
                    tls:
                      description: 9093端口的TLS listener配置.
                      properties:
                        authentication:
                          description: 本Listener的鉴权设置.
                          properties:
                            accessTokenIsJwt: {description: 是否访问token会被当做JWT来处理。如果鉴权服务器返回Opaque token，
                                                 则这里必须设置为false。默认为true, type: boolean}
                            checkAccessTokenType: {description: 设置是否进行访问token的类型检查。如果鉴权服务器返回的
                                                     JWT token不包含'typ'声明，
                                                     那么这里应该被设置为false。默认为true, type: boolean}
                            checkIssuer: {description: 是否打开对Issuer的检查。缺省Issuer是用配置在validIssuerUri的值来检查
                                            的，默认为true, type: boolean}
                            clientId: {description: OAuth Client ID，Kafka broker用来到鉴权服务器上鉴权以及在
                                         introspect endpoint URI中使用, type: string}
                            clientSecret:
                              description: '包含OAuth客户端保密字典的K8S保密字典，Kafka broker用来到鉴权服务器上鉴权以及在
                              introspect endpoint URI中使用'
                              properties:
                                key: {description: 用来保存K8S保密字典的Key值, type: string}
                                secretName: {description: 包含secret value的保密字典名称, type: string}
                              required: [key, secretName]
                              type: object
                            disableTlsHostnameVerification: {description: 是否使能TLS主机名校验，默认是false, type: boolean}
                            enableECDSA: {description: 是否通过安装BouncyCastle crypto provider来使能ECDSA支持，缺省是false., type: boolean}
                            fallbackUserNameClaim: {description: 当通过userNameClaim字段指定的声明不存在的情况下采用的替补用户声明。This is useful
                                                      when `client_credentials` authentication only results
                                                      in the client id being provided in another claim.
                                                      It only takes effect if `userNameClaim` is set., type: string}
                            fallbackUserNamePrefix: {description: '和fallbackUserNameClaim搭配使用来组成user id。
                                仅在fallbackUserNameClaim为true的情况下有效。把用户名和客户端id映射到同一个user id空间，
                                可以避免命名冲突', type: string}
                            introspectionEndpointUri: {description: 用来验证non-JWT token的token检查点
                                                         （URI of the token introspection endpoint, type: string}
                            jwksEndpointUri: {description: 'URI of the JWKS certificate endpoint, 可用来进行本地JWT验证',
                              type: string}
                            jwksExpirySeconds: {description: 设置JWKS证书的有效期。该数值应该比由
                                                  jwksRefreshSeconds指定的刷新间隔长至少60秒。默认是360秒。, minimum: 1, type: integer}
                            jwksRefreshSeconds: {description: 设置JWKS证书多久刷新一次。刷新间隔要比
                                                   jwksExpirySeconds指定的超时间隔少至少60秒。默认为300秒。, minimum: 1, type: integer}
                            tlsTrustedCertificates:
                              description: 和OAuth服务器之间的TLS连接采用的可信证书.
                              items:
                                properties:
                                  certificate: {description: 保密字典中的文件证书名称, type: string}
                                  secretName: {description: 包含证书的保密字典名称, type: string}
                                required: [certificate, secretName]
                                type: object
                              type: array
                            type:
                              description: 鉴权类型。 oauth type uses
                                SASL OAUTHBEARER Authentication. scram-sha-512 type
                                uses SASL SCRAM-SHA-512 Authentication. tls type
                                uses TLS Client Authentication. tls type只能用于TLS listeners.
                              enum: [tls, scram-sha-512, oauth]
                              type: string
                            userInfoEndpointUri: {description: '当检查点（Introspection Endpoint）不返回可用于user id的信
                                息时，可用于获取user id的用户信息获取URI', type: string}
                            userNameClaim: {description: '可用来提取user id的JWT鉴权token、Introspection Endpoint response                                                                                  或者User Info Endpoint response中声明的用户名，默认为sub', type: string}
                            validIssuerUri: {description: 用于鉴权的token颁发者的URI, type: string}
                            validTokenType: {description: 'Valid value for the `token_type`
                                attribute returned by the Introspection Endpoint.
                                No default value, and not checked by default.', type: string}
                          required: [type]
                          type: object
                        configuration:
                          description: TLS listener配置.
                          properties:
                            brokerCertChainAndKey:
                              description: 用于保存证书和私钥的保密字典引用，证书可以包含整个证书链.
                              properties:
                                certificate: {description: 保密字典中文件证书名字, type: string}
                                key: {description: 保密字典中的私钥名称, type: string}
                                secretName: {description: 包含证书的保密字典名称, type: string}
                              required: [certificate, key, secretName]
                              type: object
                          type: object
                        networkPolicyPeers:
                          description: '可以连接到本Listener的网络对端列表。本列表中的网络对端是通过OR操作拼接在一起。
                          如果本字段为空，所有连接都被可以连接到这个Listener。如果这个配置存在并且有至少一个条目，
                          则只有匹配其中一个条目的连接才可以被允许'
                          items:
                            properties:
                              ipBlock:
                                properties:
                                  cidr: {type: string}
                                  except:
                                    items: {type: string}
                                    type: array
                                type: object
                              namespaceSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              podSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                            type: object
                          type: array
                      type: object
                  type: object
                livenessProbe:
                  description: 容器组存活性检查.
                  properties:
                    failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                    initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                    periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                    successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                    type: integer}
                    timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                  type: object
                logging:
                  description: Kafka日志配置.
                  properties:
                    loggers: {description: 从logger名称到logger级别映射.,
                      type: object}
                    name: {description: 用于获取日志配置的配置字典名称, type: string}
                    type:
                      description: 日志类型，只能是inline或者external.
                      enum: [inline, external]
                      type: string
                  required: [type]
                  type: object
                metrics: {description: 'Prometheus JMX Exporter配置.
                    查看 https://github.com/prometheus/jmx_exporter 来获取本配置项的细节', type: object}
                rack:
                  description: Broker机架信息配置.
                  properties:
                    topologyKey: {description: "和分配给K8S集群节点的Label对应的Key，Label的值是用来设置Broker的'broker.rack'
                                  字段的，例如: failure-domain.beta.kubernetes.io/zone",
                      type: string}
                  required: [topologyKey]
                  type: object
                readinessProbe:
                  description: 容器组可用性检查.
                  properties:
                    failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                    initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                    periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                    successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                    type: integer}
                    timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                  type: object
                replicas: {description: 集群中容器组数量., minimum: 1,
                  type: integer}
                resources:
                  description: 需要保留的CPU和内存资源.
                  properties:
                    limits: {type: object}
                    requests: {type: object}
                  type: object
                storage:
                  description: 存储配置（磁盘）不可更新.
                  properties:
                    class: {description: 用于分配动态存储卷的存储类, type: string}
                    deleteClaim: {description: 当集群被卸载的时候，是否需要删除PVC.,
                      type: boolean}
                    id: {description: 存储id，选择JBOD类型的存储卷所必需的参数.,
                      minimum: 0, type: integer}
                    overrides:
                      description: 用于覆盖单个broker的配置，可以给不同的broker指定不同的配置
                      items:
                        properties:
                          broker: {description: Kafka broker Id (broker identifier).,
                            type: integer}
                          class: {description: 当前broker的动态存储卷所采用的储存类, type: string}
                        type: object
                      type: array
                    selector: {description: '指定要用的PV，包含key：value对代表被选择卷的Label', type: object}
                    size: {description: '当type=persistent-claim的情况下是必须字段，定义了PVC的大小（例如1Gi）', type: string}
                    sizeLimit: {description: '当type=ephemeral的时候，定义了本EmptyDir卷所需要的本地存储的总大小',
                                pattern: '^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$',
                      type: string}
                    type:
                      description: 存储类型，只能是'ephemeral', 'persistent-claim', or 'jbod'.
                      enum: [ephemeral, persistent-claim, jbod]
                      type: string
                    volumes:
                      description: 用来表示JBOD磁盘阵列的存储卷对象列表.
                      items:
                        properties:
                          class: {description: 用于分配动态存储卷的存储类., type: string}
                          deleteClaim: {description: 当集群被卸载的时候，是否需要删除PVC.,
                            type: boolean}
                          id: {description: 存储id，选择JBOD类型的存储卷所必需的参数, minimum: 0, type: integer}
                          overrides:
                            description: 用于覆盖单个broker的配置，可以给不同的broker指定不同的配置
                            items:
                              properties:
                                broker: {description: Kafka broker Id (broker
                                    identifier)., type: integer}
                                class: {description: 用来给这个broker动态分配空间的存储类, type: string}
                              type: object
                            type: array
                          selector: {description: '指定要用的PV，包含key：value对代表被选择卷的Label', type: object}
                          size: {description: '当type=persistent-claim的情况下是必须字段，定义了PVC的大小（例如1Gi）', type: string}
                          sizeLimit: {description: '当type=ephemeral的时候，定义了本EmptyDir卷所需要的本地存储的总大小',
                                      pattern: '^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$',
                            type: string}
                          type:
                            description: 存储类型，只能是'ephemeral', 'persistent-claim', or 'jbod'.
                            enum: [ephemeral, persistent-claim]
                            type: string
                        required: [type]
                        type: object
                      type: array
                  required: [type]
                  type: object
                template:
                  description: Kafka集群资源模板，可以让用户指定有状态副本集、容器组和服务是如何创建的
                  properties:
                    bootstrapService:
                      description: Kafka bootstrap `Service`模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    brokersService:
                      description: Kafka broker `Service`模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    externalBootstrapIngress:
                      description: Kafka外部bootstrap `Ingress`模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    externalBootstrapRoute:
                      description: Kafka外部bootstrap `Route`模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    externalBootstrapService:
                      description: Kafka 外部 bootstrap 服务模板.
                      properties:
                        externalTrafficPolicy:
                          description: '指定是否服务会把外部流量路由到本地节点或者集群范围内的endpoints。选择为Cluster可能会导致第二跳
                            到其他节点从而变更了客户端源IP; 选择为Local则可以避免到LoadBalancer和Nodeport类型服务的第二跳，从而保留
                            客户端源IP。如果没有指定，则K8S会使用Cluster作为缺省值'
                          enum: [Local, Cluster]
                          type: string
                        loadBalancerSourceRanges:
                          description: 'CIDR范围列表（例如 10.0.0.0/8或者130.211.204.1/32）。客户端可以从这个列表中选择并进行连接
                          来加载Balancer类型的Listener。如果平台支持，流经负载均衡器的流量会被限制在指定的CIDR范围内。本选项只能
                          应用于负载均衡类型的服务。如果云提供商不支持，则本选项会被忽略。更多信息，请参考：
                          https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/'
                          items: {type: string}
                          type: array
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    initContainer:
                      description: Kafka init容器组模板.
                      properties:
                        env:
                          description: 应用到容器组的环境变量.
                          items:
                            properties:
                              name: {description: 环境变量Key., type: string}
                              value: {description: 环境变量Value.,
                                type: string}
                            type: object
                          type: array
                        securityContext:
                          description: 容器组的安全设置.
                          properties:
                            allowPrivilegeEscalation: {type: boolean}
                            capabilities:
                              properties:
                                add:
                                  items: {type: string}
                                  type: array
                                drop:
                                  items: {type: string}
                                  type: array
                              type: object
                            privileged: {type: boolean}
                            procMount: {type: string}
                            readOnlyRootFilesystem: {type: boolean}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                      type: object
                    kafkaContainer:
                      description: Kafka broker容器组模板.
                      properties:
                        env:
                          description: 应用到容器组的环境变量.
                          items:
                            properties:
                              name: {description: 环境变量Key., type: string}
                              value: {description: 环境变量Value.,
                                type: string}
                            type: object
                          type: array
                        securityContext:
                          description: 容器组的安全设置.
                          properties:
                            allowPrivilegeEscalation: {type: boolean}
                            capabilities:
                              properties:
                                add:
                                  items: {type: string}
                                  type: array
                                drop:
                                  items: {type: string}
                                  type: array
                              type: object
                            privileged: {type: boolean}
                            procMount: {type: string}
                            readOnlyRootFilesystem: {type: boolean}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                      type: object
                    perPodIngress:
                      description: 用于K8S外部访问的Kafka单个容器组配置模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    perPodRoute:
                      description: 用于Openshift外部访问的Kafka单个容器组配置.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    perPodService:
                      description: 用于K8S外部访问的Kafka单个容器组Service模板.
                      properties:
                        externalTrafficPolicy:
                          description: 指定是否服务会把外部流量路由到本地节点或者集群范围内的endpoints。选择为Cluster可能会导致第二跳
                            到其他节点从而变更了客户端源IP；选择为Local则可以避免到LoadBalancer和Nodeport类型服务的第二跳，从而保留
                            客户端源IP。如果没有指定，则K8S会使用Cluster作为缺省值.
                          enum: [Local, Cluster]
                          type: string
                        loadBalancerSourceRanges:
                          description: 'CIDR范围列表（例如 10.0.0.0/8或者130.211.204.1/32）。客户端可以从这个列表中选择并进行连接
                            来加载Balancer类型的Listener。如果平台支持，流经负载均衡器的流量会被限制在指定的CIDR范围内。本选项只能
                            应用于负载均衡类型的服务。如果云提供商不支持，则本选项会被忽略。更多信息，请参考：
                            https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/'
                          items: {type: string}
                          type: array
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    persistentVolumeClaim:
                      description: 所有Kafka PersistentVolumeClaims配置模板
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    pod:
                      description: Kafka容器组模板.
                      properties:
                        affinity:
                          description: 容器组亲和性规则.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key: {type: string}
                                                    operator: {type: string}
                                                    values:
                                                      items: {type: string}
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels: {type: object}
                                            type: object
                                          namespaces:
                                            items: {type: string}
                                            type: array
                                          topologyKey: {type: string}
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key: {type: string}
                                                    operator: {type: string}
                                                    values:
                                                      items: {type: string}
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels: {type: object}
                                            type: object
                                          namespaces:
                                            items: {type: string}
                                            type: array
                                          topologyKey: {type: string}
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  type: array
                              type: object
                          type: object
                        imagePullSecrets:
                          description: 当前容器组用来拉取镜像的保密字典应用列表.
                          items:
                            properties:
                              name: {type: string}
                            type: object
                          type: array
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                        priorityClassName: {description: 分配给容器组的优先级类的名字, type: string}
                        schedulerName: {description: '调度容器组的调度器名字，如果没有指定则会采用缺省调度器', type: string}
                        securityContext:
                          description: 设置容器组级别的安全属性和公共容器组参数.
                          properties:
                            fsGroup: {type: integer}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            supplementalGroups:
                              items: {type: integer}
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name: {type: string}
                                  value: {type: string}
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                        terminationGracePeriodSeconds: {description: 从容器组内的进程收到终止信号到被杀死的时间间隔。这个时间
                                                          间隔设置需要大于进程清理所需时间。本设置只能是一个非负数值。如果为0
                                                          则表示立刻杀死清楚。缺省值为30秒,
                          minimum: 0, type: integer}
                        tolerations:
                          description: 容器组容忍规则.
                          items:
                            properties:
                              effect: {type: string}
                              key: {type: string}
                              operator: {type: string}
                              tolerationSeconds: {type: integer}
                              value: {type: string}
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Kafka PodDisruptionBudget配置模板.
                      properties:
                        maxUnavailable: {description: '因为容器组自动被驱逐导致最大不可用容器组的数量。只有小于等于maxUnavailable
                        个容器组在驱逐之后不可用，对应的容器组才会被驱逐。把这个数值设置为0可以避免任何容器组被自动驱逐，当然这时手动
                        驱逐还是可以的。默认值为1.', minimum: 0, type: integer}
                        metadata:
                          description: 应用到PodDistruptionBugetTemplate的元数据
                            resource.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    statefulset:
                      description: Kafka StatefulSet配置模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                        podManagementPolicy:
                          description: 用于当前有状态副本集的PodManagementPolicy，有效选项为Parallel和OrderedReady。默认为Parallel.
                          enum: [OrderedReady, Parallel]
                          type: string
                      type: object
                    tlsSidecarContainer:
                      description: Kafka broker TLS sidecar容器组配置模板.
                      properties:
                        env:
                          description: 应用到容器组的环境变量.
                          items:
                            properties:
                              name: {description: 环境变量Key., type: string}
                              value: {description: 环境变量Value.,
                                type: string}
                            type: object
                          type: array
                        securityContext:
                          description: 容器组的安全设置.
                          properties:
                            allowPrivilegeEscalation: {type: boolean}
                            capabilities:
                              properties:
                                add:
                                  items: {type: string}
                                  type: array
                                drop:
                                  items: {type: string}
                                  type: array
                              type: object
                            privileged: {type: boolean}
                            procMount: {type: string}
                            readOnlyRootFilesystem: {type: boolean}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                      type: object
                  type: object
                tlsSidecar:
                  description: TLS sidecar配置.
                  properties:
                    image: {description: 容器组的镜像地址., type: string}
                    livenessProbe:
                      description: 容器组存活性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次, type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    logLevel:
                      description: TLS sidecar的日志级别，缺省级别为Notice.
                      enum: [emerg, alert, crit, err, warning, notice, info, debug]
                      type: string
                    readinessProbe:
                      description: 容器组可用性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    resources:
                      description: 需要保留的CPU和内存资源.
                      properties:
                        limits: {type: object}
                        requests: {type: object}
                      type: object
                  type: object
                tolerations:
                  description: 容器组容忍规则.
                  items:
                    properties:
                      effect: {type: string}
                      key: {type: string}
                      operator: {type: string}
                      tolerationSeconds: {type: integer}
                      value: {type: string}
                    type: object
                  type: array
                version: {description: 'The kafka broker版本. 默认为{DefaultKafkaVersion}.
                    参考用于手册来了解如何升级或者降级这个版本', type: string}
              required: [replicas, storage, listeners, jmxOptions]
              type: object
            kafkaExporter:
              description: Kafka Exporter配置. Kafka Exporter可以提供额外的监控数据，例如消费者组的延迟.
              properties:
                enableSaramaLogging: {description: '打开Sarama日志，Sarama是一个Kafka Exporter使用的Go语言客户端', type: boolean}
                groupRegex: {description: 用于指定需要被监控的消费者组的正则表达式，默认为'.*', type: string}
                image: {description: 容器组镜像地址, type: string}
                livenessProbe:
                  description: 容器组存活性检查.
                  properties:
                    failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                    initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                    periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                    successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次, type: integer}
                    timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                  type: object
                logging: {description: '只有在给定严重级别之上的日志才会被记录，有效严重级别包括[`debug`, `info`, `warn`, `error`, `fatal`].
                    默认严重级别为info', type: string}
                readinessProbe:
                  description: 容器组可用性检查.
                  properties:
                    failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                    initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                    periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                    successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                    timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                  type: object
                resources:
                  description: 需要保留的CPU和内存资源.
                  properties:
                    limits: {type: object}
                    requests: {type: object}
                  type: object
                template:
                  description: 部署和容器组模板的定制化.
                  properties:
                    container:
                      description: Kafka Exporter容器组配置模板.
                      properties:
                        env:
                          description: 应用到容器组的环境变量.
                          items:
                            properties:
                              name: {description: 环境变量Key., type: string}
                              value: {description: 环境变量Value.,
                                type: string}
                            type: object
                          type: array
                        securityContext:
                          description: 容器组的安全设置.
                          properties:
                            allowPrivilegeEscalation: {type: boolean}
                            capabilities:
                              properties:
                                add:
                                  items: {type: string}
                                  type: array
                                drop:
                                  items: {type: string}
                                  type: array
                              type: object
                            privileged: {type: boolean}
                            procMount: {type: string}
                            readOnlyRootFilesystem: {type: boolean}
                            runAsGroup: {description: 请输入表示group id的整数, type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {description: 请输入表示user id的整数, type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                      type: object
                    deployment:
                      description: Kafka Exporter Deployment配置模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    pod:
                      description: Kafka Exporter 容器组配置模板.
                      properties:
                        affinity:
                          description: 容器组亲和性规则.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key: {type: string}
                                                    operator: {type: string}
                                                    values:
                                                      items: {type: string}
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels: {type: object}
                                            type: object
                                          namespaces:
                                            items: {type: string}
                                            type: array
                                          topologyKey: {type: string}
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key: {type: string}
                                                    operator: {type: string}
                                                    values:
                                                      items: {type: string}
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels: {type: object}
                                            type: object
                                          namespaces:
                                            items: {type: string}
                                            type: array
                                          topologyKey: {type: string}
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  type: array
                              type: object
                          type: object
                        imagePullSecrets:
                          description: 当前容器组用来拉取镜像的保密字典应用列表.
                          items:
                            properties:
                              name: {type: string}
                            type: object
                          type: array
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                        priorityClassName: {description: 分配给容器组的优先级类的名字, type: string}
                        schedulerName: {description: '调度容器组的调度器名字，如果没有指定则会采用缺省调度器', type: string}
                        securityContext:
                          description: 设置容器组级别的安全属性和公共容器组参数.
                          properties:
                            fsGroup: {type: integer}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            supplementalGroups:
                              items: {type: integer}
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name: {type: string}
                                  value: {type: string}
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                        terminationGracePeriodSeconds: {description: 从容器组内的进程收到终止信号到被杀死的时间间隔。这个时间
                                                          间隔设置需要大于进程清理所需时间。本设置只能是一个非负数值。如果为0则
                                                          表示立刻杀死清楚。缺省值为30秒,
                          minimum: 0, type: integer}
                        tolerations:
                          description: 容器组容忍规则.
                          items:
                            properties:
                              effect: {type: string}
                              key: {type: string}
                              operator: {type: string}
                              tolerationSeconds: {type: integer}
                              value: {type: string}
                            type: object
                          type: array
                      type: object
                    service:
                      description: Kafka Exporter Service配置模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                  type: object
                topicRegex: {description: 主题选择的正则表达式，默认为'.*', type: string}
              type: object
            maintenanceTimeWindows:
              description: 维护任务的时间窗口列表。每个时间窗口是一个cron表达式来定义的.
              items: {type: string}
              type: array
            topicOperator:
              description: Topic Operator配置.
              properties:
                affinity:
                  description: 容器组亲和性规则.
                  properties:
                    nodeAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              preference:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              weight: {type: integer}
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          properties:
                            nodeSelectorTerms:
                              items:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              type: array
                          type: object
                      type: object
                    podAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels: {type: object}
                                    type: object
                                  namespaces:
                                    items: {type: string}
                                    type: array
                                  topologyKey: {type: string}
                                type: object
                              weight: {type: integer}
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              namespaces:
                                items: {type: string}
                                type: array
                              topologyKey: {type: string}
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels: {type: object}
                                    type: object
                                  namespaces:
                                    items: {type: string}
                                    type: array
                                  topologyKey: {type: string}
                                type: object
                              weight: {type: integer}
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              namespaces:
                                items: {type: string}
                                type: array
                              topologyKey: {type: string}
                            type: object
                          type: array
                      type: object
                  type: object
                image: {description: Topic Operator使用的镜像地址., type: string}
                jvmOptions:
                  description: 容器组的JVM参数.
                  properties:
                    -XX: {description: JVM的-XX选项参数表., type: object}
                    -Xms: {description: JVM的-Xms选项, pattern: '[0-9]+[mMgG]?',
                      type: string}
                    -Xmx: {description: JVM的-Xmx选项, pattern: '[0-9]+[mMgG]?',
                      type: string}
                    gcLoggingEnabled: {description: GC日志开关，默认关闭, type: boolean}
                    javaSystemProperties:
                      description: 通过-D传递给JVM的额外系统属性.
                      items:
                        properties:
                          name: {description: 系统属性名称, type: string}
                          value: {description: 系统属性数值, type: string}
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: 容器组存活性检查.
                  properties:
                    failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                    initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                    periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                    successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                    timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                  type: object
                logging:
                  description: 日志配置.
                  properties:
                    loggers: {description: 从logger名称到logger级别映射.,
                      type: object}
                    name: {description: 用于获取日志配置的配置字典名称, type: string}
                    type:
                      description: 日志类型，只能是inline或者external.
                      enum: [inline, external]
                      type: string
                  required: [type]
                  type: object
                readinessProbe:
                  description: 容器组可用性检查.
                  properties:
                    failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                    initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                    periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                    successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                    timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                  type: object
                reconciliationIntervalSeconds: {description: 周期性Reconciliation间隔, minimum: 0, type: integer}
                resources:
                  description: 需要保留的CPU和内存资源.
                  properties:
                    limits: {type: object}
                    requests: {type: object}
                  type: object
                tlsSidecar:
                  description: TLS sidecar配置.
                  properties:
                    image: {description: 容器组的镜像地址., type: string}
                    livenessProbe:
                      description: 容器组存活性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    logLevel:
                      description: TLS sidecar的日志级别，缺省级别为Notice.
                      enum: [emerg, alert, crit, err, warning, notice, info, debug]
                      type: string
                    readinessProbe:
                      description: 容器组可用性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    resources:
                      description: 需要保留的CPU和内存资源.
                      properties:
                        limits: {type: object}
                        requests: {type: object}
                      type: object
                  type: object
                topicMetadataMaxAttempts: {description: 尝试获取主题元数据的最大尝试次数, minimum: 0, type: integer}
                watchedNamespace: {description: Topic Operator应该watch的命名空间, type: string}
                zookeeperSessionTimeoutSeconds: {description: ZooKeeper会话超时时间, minimum: 0, type: integer}
              type: object
            zookeeper:
              description: ZooKeeper集群配置.
              properties:
                affinity:
                  description: 容器组亲和性规则.
                  properties:
                    nodeAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              preference:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              weight: {type: integer}
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          properties:
                            nodeSelectorTerms:
                              items:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchFields:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                type: object
                              type: array
                          type: object
                      type: object
                    podAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels: {type: object}
                                    type: object
                                  namespaces:
                                    items: {type: string}
                                    type: array
                                  topologyKey: {type: string}
                                type: object
                              weight: {type: integer}
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              namespaces:
                                items: {type: string}
                                type: array
                              topologyKey: {type: string}
                            type: object
                          type: array
                      type: object
                    podAntiAffinity:
                      properties:
                        preferredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              podAffinityTerm:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels: {type: object}
                                    type: object
                                  namespaces:
                                    items: {type: string}
                                    type: array
                                  topologyKey: {type: string}
                                type: object
                              weight: {type: integer}
                            type: object
                          type: array
                        requiredDuringSchedulingIgnoredDuringExecution:
                          items:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              namespaces:
                                items: {type: string}
                                type: array
                              topologyKey: {type: string}
                            type: object
                          type: array
                      type: object
                  type: object
                config: {description: 'ZooKeeper broker配置。以下列前缀开头的属性不能被设置：server., dataDir, dataLogDir,
                    clientPort, authProvider, quorum.auth, requireClientAuthScheme,
                    snapshot.trust.empty, standaloneEnabled, reconfigEnabled, 4lw.commands.whitelist,
                    secureClientPort, ssl., serverCnxnFactory, sslQuorum (with the
                    exception of: ssl.protocol, ssl.quorum.protocol, ssl.enabledProtocols,
                    ssl.quorum.enabledProtocols, ssl.ciphersuites, ssl.quorum.ciphersuites).',
                  type: object}
                image: {description: 容器组镜像地址, type: string}
                jvmOptions:
                  description: 容器组的JVM参数.
                  properties:
                    -XX: {description: JVM的-XX选项参数表., type: object}
                    -Xms: {description: JVM的-Xms选项, pattern: '[0-9]+[mMgG]?',
                      type: string}
                    -Xmx: {description: JVM的-Xmx选项, pattern: '[0-9]+[mMgG]?',
                      type: string}
                    gcLoggingEnabled: {description: GC日志开关，默认关闭, type: boolean}
                    javaSystemProperties:
                      description: 通过-D传递给JVM的额外系统属性.
                      items:
                        properties:
                          name: {description: 系统属性名称, type: string}
                          value: {description: 系统属性数值, type: string}
                        type: object
                      type: array
                  type: object
                livenessProbe:
                  description: 容器组存活性检查.
                  properties:
                    failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                    initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                    periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                    successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                    timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                  type: object
                logging:
                  description: ZooKeeper 日志配置.
                  properties:
                    loggers: {description: 从logger名称到logger级别映射.,
                      type: object}
                    name: {description: 用于获取日志配置的配置字典名称, type: string}
                    type:
                      description: 日志类型，只能是inline或者external.
                      enum: [inline, external]
                      type: string
                  required: [type]
                  type: object
                metrics: {description: 'Prometheus JMX Exporter配置. 查看 https://github.com/prometheus/jmx_exporter 来获取本配置项的细节', type: object}
                readinessProbe:
                  description: 容器组可用性检查.
                  properties:
                    failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                    initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                    periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                    successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                    timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                  type: object
                replicas: {description: 集群中容器组数量., minimum: 1,
                  type: integer}
                resources:
                  description: 需要保留的CPU和内存资源.
                  properties:
                    limits: {type: object}
                    requests: {type: object}
                  type: object
                storage:
                  description: 存储配置（磁盘）不可更.
                  properties:
                    class: {description: 用于分配动态存储卷的存储类, type: string}
                    deleteClaim: {description: 当集群被卸载的时候，是否需要删除PVC.,
                      type: boolean}
                    id: {description: 存储id，选择JBOD类型的存储卷所必需的参数.,
                      minimum: 0, type: integer}
                    overrides:
                      description: 用于覆盖单个broker的配置，可以给不同的broker指定不同的配置
                      items:
                        properties:
                          broker: {description: Id of the kafka broker (broker identifier).,
                            type: integer}
                          class: {description: 当前broker的动态存储卷所采用的储存类, type: string}
                        type: object
                      type: array
                    selector: {description: '指定要用的PV，包含key：value对代表被选择卷的Label', type: object}
                    size: {description: '当type=persistent-claim的情况下是必须字段，定义了PVC的大小（例如1Gi）', type: string}
                    sizeLimit: {description: '当type=ephemeral的时候，定义了本EmptyDir卷所需要的本地存储的总大小', pattern: '^([0-9.]+)([eEinumkKMGTP]*[-+]?[0-9]*)$',
                      type: string}
                    type:
                      description: 存储类型，只能是'ephemeral'或者'persistent-claim'.
                      enum: [ephemeral, persistent-claim]
                      type: string
                  required: [type]
                  type: object
                template:
                  description: ZooKeeper集群资源模板，可以让用户指定有状态副本集、容器组和服务是如何创建的
                  properties:
                    clientService:
                      description: ZooKeeper客户端服务.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    nodesService:
                      description: ZooKeeper nodes服务模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    persistentVolumeClaim:
                      description: 所有ZooKeeper的持久卷模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    pod:
                      description: ZooKeeper容器组模板.
                      properties:
                        affinity:
                          description: 容器组亲和性规则.
                          properties:
                            nodeAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      preference:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  properties:
                                    nodeSelectorTerms:
                                      items:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchFields:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                        type: object
                                      type: array
                                  type: object
                              type: object
                            podAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key: {type: string}
                                                    operator: {type: string}
                                                    values:
                                                      items: {type: string}
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels: {type: object}
                                            type: object
                                          namespaces:
                                            items: {type: string}
                                            type: array
                                          topologyKey: {type: string}
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  type: array
                              type: object
                            podAntiAffinity:
                              properties:
                                preferredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      podAffinityTerm:
                                        properties:
                                          labelSelector:
                                            properties:
                                              matchExpressions:
                                                items:
                                                  properties:
                                                    key: {type: string}
                                                    operator: {type: string}
                                                    values:
                                                      items: {type: string}
                                                      type: array
                                                  type: object
                                                type: array
                                              matchLabels: {type: object}
                                            type: object
                                          namespaces:
                                            items: {type: string}
                                            type: array
                                          topologyKey: {type: string}
                                        type: object
                                      weight: {type: integer}
                                    type: object
                                  type: array
                                requiredDuringSchedulingIgnoredDuringExecution:
                                  items:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  type: array
                              type: object
                          type: object
                        imagePullSecrets:
                          description: 当前容器组用来拉取镜像的保密字典应用列表.
                          items:
                            properties:
                              name: {type: string}
                            type: object
                          type: array
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                        priorityClassName: {description: 分配给容器组的优先级类的名字, type: string}
                        schedulerName: {description: '调度容器组的调度器名字，如果没有指定则会采用缺省调度器', type: string}
                        securityContext:
                          description: 设置容器组级别的安全属性和公共容器组参数.
                          properties:
                            fsGroup: {type: integer}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            supplementalGroups:
                              items: {type: integer}
                              type: array
                            sysctls:
                              items:
                                properties:
                                  name: {type: string}
                                  value: {type: string}
                                type: object
                              type: array
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                        terminationGracePeriodSeconds: {description: 从容器组内的进程收到终止信号到被杀死的时间间隔。这个时间
                                                          间隔设置需要大于进程清理所需时间。本设置只能是一个非负数值。如果为0
                                                          则表示立刻杀死清楚。缺省值为30秒,
                          minimum: 0, type: integer}
                        tolerations:
                          description: 容器组容忍规则.
                          items:
                            properties:
                              effect: {type: string}
                              key: {type: string}
                              operator: {type: string}
                              tolerationSeconds: {type: integer}
                              value: {type: string}
                            type: object
                          type: array
                      type: object
                    podDisruptionBudget:
                      description: Template for ZooKeeper `PodDisruptionBudget`.
                      properties:
                        maxUnavailable: {description: '由于容器组被系统驱逐导致的最大不可用容器组数量。只有在容器组不可用数量
                            小于等于该数值的时候，新的容器组才可以允许被驱逐。把这个数值设置为0可以避免任何自发驱逐，而只接受手动
                            驱逐。缺省数值为1，最小值为0.', minimum: 0, type: integer}
                        metadata:
                          description: 应用到PodDistruptionBugetTemplate的元数据
                            resource.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                      type: object
                    statefulset:
                      description: ZooKeeper 有状态副本集模板.
                      properties:
                        metadata:
                          description: 应用到资源的元数据.
                          properties:
                            annotations: {description: 'Annotations，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                            labels: {description: 'Labels，可以被应用到有状态副本集、部署、容器组和服务等等', type: object}
                          type: object
                        podManagementPolicy:
                          description: 用于当前有状态副本集的PodManagementPolicy，有效选项为Parallel和OrderedReady。默认为Parallel.
                          enum: [OrderedReady, Parallel]
                          type: string
                      type: object
                    tlsSidecarContainer:
                      description: Zookeeper 服务 TLS sidecar 容器组模板. 本TLS sidecar不再使用，所以该参数会被忽略
                      properties:
                        env:
                          description: 应用到容器组的环境变量.
                          items:
                            properties:
                              name: {description: 环境变量Key., type: string}
                              value: {description: 环境变量Value.,
                                type: string}
                            type: object
                          type: array
                        securityContext:
                          description: 容器组的安全设置.
                          properties:
                            allowPrivilegeEscalation: {type: boolean}
                            capabilities:
                              properties:
                                add:
                                  items: {type: string}
                                  type: array
                                drop:
                                  items: {type: string}
                                  type: array
                              type: object
                            privileged: {type: boolean}
                            procMount: {type: string}
                            readOnlyRootFilesystem: {type: boolean}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                      type: object
                    zookeeperContainer:
                      description: ZooKeeper容器组模板
                      properties:
                        env:
                          description: 应用到容器组的环境变量.
                          items:
                            properties:
                              name: {description: 环境变量Key., type: string}
                              value: {description: 环境变量Value.,
                                type: string}
                            type: object
                          type: array
                        securityContext:
                          description: 容器组的安全设置.
                          properties:
                            allowPrivilegeEscalation: {type: boolean}
                            capabilities:
                              properties:
                                add:
                                  items: {type: string}
                                  type: array
                                drop:
                                  items: {type: string}
                                  type: array
                              type: object
                            privileged: {type: boolean}
                            procMount: {type: string}
                            readOnlyRootFilesystem: {type: boolean}
                            runAsGroup: {type: integer}
                            runAsNonRoot: {type: boolean}
                            runAsUser: {type: integer}
                            seLinuxOptions:
                              properties:
                                level: {type: string}
                                role: {type: string}
                                type: {type: string}
                                user: {type: string}
                              type: object
                            windowsOptions:
                              properties:
                                gmsaCredentialSpec: {type: string}
                                gmsaCredentialSpecName: {type: string}
                              type: object
                          type: object
                      type: object
                  type: object
                tlsSidecar:
                  description: TLS sidecar配置. 如果不再启用TLS sidecar，下面的参数会被忽略
                  properties:
                    image: {description: 容器组的镜像地址., type: string}
                    livenessProbe:
                      description: 容器组存活性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    logLevel:
                      description: TLS sidecar的日志级别，缺省级别为Notice.
                      enum: [emerg, alert, crit, err, warning, notice, info, debug]
                      type: string
                    readinessProbe:
                      description: 容器组可用性检查.
                      properties:
                        failureThreshold: {description: 用于判定不存活的最小连续不存活次数阈值，缺省3秒，最小1秒, type: integer}
                        initialDelaySeconds: {description: 第一次健康检查之前的延迟时间, minimum: 0, type: integer}
                        periodSeconds: {description: 进行存活检查的时间间隔，缺省10秒，最小1秒, type: integer}
                        successThreshold: {description: 用于判定存活的最小连续存活次数阈值，缺省1次，最小1次,
                        type: integer}
                        timeoutSeconds: {description: 健康检查的超时时间, minimum: 0, type: integer}
                      type: object
                    resources:
                      description: 需要保留的CPU和内存资源.
                      properties:
                        limits: {type: object}
                        requests: {type: object}
                      type: object
                  type: object
                tolerations:
                  description: 容器组容忍规则.
                  items:
                    properties:
                      effect: {type: string}
                      key: {type: string}
                      operator: {type: string}
                      tolerationSeconds: {type: integer}
                      value: {type: string}
                    type: object
                  type: array
              required: [replicas, storage]
              type: object
          required: [kafka, zookeeper]
          type: object
        status:
          description: Kafka集群和ZooKeeper集群状态.
          properties:
            conditions:
              description: Status conditions列表.
              items:
                properties:
                  lastTransitionTime: {description: 'condition最新一次变更时间。需要采用的格式为UTC时区的"yyyy-MM-ddTHH:mm:ssZ"', type: string}
                  message: {description: condition最后一次变更的详细细节描述, type: string}
                  reason: {description: Condition最后一次变更原因（驼峰格式的简短描述）, type: string}
                  status: {description: 'Condition的状态，可能的状态为True, False或者Unknown.', type: string}
                  type: {description: 'Condition的唯一ID，用于区分不同的Condition', type: string}
                type: object
              type: array
            listeners:
              description: 内部和外部listener监听地址.
              items:
                properties:
                  addresses:
                    description: 当前Listener的地址列表.
                    items:
                      properties:
                        host: {description: Kafka bootstrap服务的DNS名称或者IP地址, type: string}
                        port: {description: Kafka bootstrap服务的端口号, type: integer}
                      type: object
                    type: array
                  bootstrapServers: {description: '逗号分隔的"host:port"对，用于连接到Kafka集群的Listener',
                    type: string}
                  certificates:
                    description: 用于验证服务端ID的TLS证书列表，仅对于"tls"或者"external"类型的Listener有效.
                    items: {type: string}
                    type: array
                  type: {description: 'Listener类型，可以是"plain", "tls"和"external"', type: string}
                type: object
              type: array
            observedGeneration: {description: Operator最新一次生成的CRD数字标示, type: integer}
          type: object
  version: v1beta1
  versions:
  - {name: v1beta1, served: true, storage: true}
  - {name: v1alpha1, served: true, storage: false}

