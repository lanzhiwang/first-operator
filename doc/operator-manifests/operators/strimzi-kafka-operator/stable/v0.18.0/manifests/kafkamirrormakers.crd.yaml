apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  labels: {app: strimzi, strimzi.io/crd-install: 'true'}
  name: kafkamirrormakers.kafka.strimzi.io
spec:
  additionalPrinterColumns:
  - {JSONPath: .spec.replicas, description: 所需数量的Kafka MirrorMaker
      replicas, name: Desired replicas, type: integer}
  - {JSONPath: .spec.consumer.bootstrapServers, description: 使用者的引导服务器,
      name: Consumer Bootstrap Servers, priority: 1, type: string}
  - {JSONPath: .spec.producer.bootstrapServers, description: 生产者的引导服务器,
      name: Producer Bootstrap Servers, priority: 1, type: string}
  group: kafka.strimzi.io
  names:
    categories: [strimzi]
    kind: KafkaMirrorMaker
    listKind: KafkaMirrorMakerList
    plural: kafkamirrormakers
    shortNames: [kmm]
    singular: kafkamirrormaker
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        spec:
          description: Kafka MirrorMaker的规格。
          properties:
            affinity:
              description: pod 亲和性 规则。
              properties:
                nodeAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          preference:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key: {type: string}
                                    operator: {type: string}
                                    values:
                                      items: {type: string}
                                      type: array
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key: {type: string}
                                    operator: {type: string}
                                    values:
                                      items: {type: string}
                                      type: array
                                  type: object
                                type: array
                            type: object
                          weight: {type: integer}
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      properties:
                        nodeSelectorTerms:
                          items:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key: {type: string}
                                    operator: {type: string}
                                    values:
                                      items: {type: string}
                                      type: array
                                  type: object
                                type: array
                              matchFields:
                                items:
                                  properties:
                                    key: {type: string}
                                    operator: {type: string}
                                    values:
                                      items: {type: string}
                                      type: array
                                  type: object
                                type: array
                            type: object
                          type: array
                      type: object
                  type: object
                podAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          podAffinityTerm:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              namespaces:
                                items: {type: string}
                                type: array
                              topologyKey: {type: string}
                            type: object
                          weight: {type: integer}
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key: {type: string}
                                    operator: {type: string}
                                    values:
                                      items: {type: string}
                                      type: array
                                  type: object
                                type: array
                              matchLabels: {type: object}
                            type: object
                          namespaces:
                            items: {type: string}
                            type: array
                          topologyKey: {type: string}
                        type: object
                      type: array
                  type: object
                podAntiAffinity:
                  properties:
                    preferredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          podAffinityTerm:
                            properties:
                              labelSelector:
                                properties:
                                  matchExpressions:
                                    items:
                                      properties:
                                        key: {type: string}
                                        operator: {type: string}
                                        values:
                                          items: {type: string}
                                          type: array
                                      type: object
                                    type: array
                                  matchLabels: {type: object}
                                type: object
                              namespaces:
                                items: {type: string}
                                type: array
                              topologyKey: {type: string}
                            type: object
                          weight: {type: integer}
                        type: object
                      type: array
                    requiredDuringSchedulingIgnoredDuringExecution:
                      items:
                        properties:
                          labelSelector:
                            properties:
                              matchExpressions:
                                items:
                                  properties:
                                    key: {type: string}
                                    operator: {type: string}
                                    values:
                                      items: {type: string}
                                      type: array
                                  type: object
                                type: array
                              matchLabels: {type: object}
                            type: object
                          namespaces:
                            items: {type: string}
                            type: array
                          topologyKey: {type: string}
                        type: object
                      type: array
                  type: object
              type: object
            consumer:
              description: 源集群的配置。
              properties:
                authentication:
                  description: 用于连接到集群的身份验证配置。
                  properties:
                    accessToken:
                      description: '链接到从授权服务器获得的访问令牌的Kubernetes Secret'
                      properties:
                        key: {description: '值存储在Kubernetes Secret中的密钥', type: string}
                        secretName: {description: '包含密钥值的Kubernetes Secret的名称.', type: string}
                      required: [key, secretName]
                      type: object
                    accessTokenIsJwt: {description: '配置是否将访问令牌视为JWT。如果授权服务器返回不透明令牌，则应将其设置为"false"。 默认为true。', type: boolean}
                    certificateAndKey:
                      description: 参考'Secret'持有的证书和私钥配对。
                      properties:
                        certificate: {description: Secret 中文件证书名称, type: string}
                        key: {description:  Secret 中私钥名称, type: string}
                        secretName: {description: secret名称 , type: string}
                      required: [certificate, key, secretName]
                      type: object
                    clientId: {description: Kafka客户端可以用来对OAuth服务器进行身份验证并使用令牌端点URI的OAuth客户端ID, type: string}
                    clientSecret:
                      description: Kubernetes Secret中包含OAuth客户端密钥，Kafka客户端可使用该密钥对OAuth服务器进行身份验证并使用令牌端点URI.
                      properties:
                        key: {description: 存储在Kubernetes Secret中的密钥值., type: string}
                        secretName: {description: 包含密钥值的Kubernetes Secret的名称., type: string}
                      required: [key, secretName]
                      type: object
                    disableTlsHostnameVerification: {description: '启用或禁用TLS主机名验证。 默认值为"false"', type: boolean}
                    maxTokenExpirySeconds: {description: '将访问令牌的生存时间设置或限制为指定的秒数。 如果授权服务器返回不透明令牌，则应设置此选项。',
                      type: integer}
                    passwordSecret:
                      description: 参考保存密码的“secret”.
                      properties:
                        password: {description: secret中key存储的密码, type: string}
                        secretName: {description: 包含密码的secret名称, type: string}
                      required: [password, secretName]
                      type: object
                    refreshToken:
                      description: 链接到包含刷新令牌的Kubernetes Secret，该刷新令牌可用于从授权服务器获取访问令牌。
                      properties:
                        key: {description: Kubernetes Secret中存储的密钥值, type: string}
                        secretName: {description: 包含密钥值的Kubernetes Secret的名称., type: string}
                      required: [key, secretName]
                      type: object
                    scope: {description: 针对授权服务器进行身份验证时要使用的OAuth范围。 某些授权服务器要求对此进行设置。 可能的值取决于授权服务器的配置方式。 默认情况下，执行令牌端点请求时未指定'scope', type: string}
                    tlsTrustedCertificates:
                      description: TLS连接到OAuth服务器的受信任证书.
                      items:
                        properties:
                          certificate: {description: 在secret中文件证书名称, type: string}
                          secretName: {description: 包含文件证书的Kubernetes Secret的名称., type: string}
                        required: [certificate, secretName]
                        type: object
                      type: array
                    tokenEndpointUri: {description: 授权服务器token endpoint URI, type: string}
                    type:
                      description: 认证类型。 当前仅支持的类型是'tls'，'scram-sha-512'和'plain'。 'scram-sha-512'类型使用SASL SCRAM-SHA-512身份验证。 “ plain”类型使用SASL PLAIN身份验证。 oauth类型使用SASL OAUTHBEARER身份验证。 'tls'类型使用TLS客户端身份验证。 仅在TLS连接上支持'tls'类型。
                      enum: [tls, scram-sha-512, plain, oauth]
                      type: string
                    username: {description: '用于认证的用户名', type: string}
                  required: [type]
                  type: object
                bootstrapServers: {description: '用于建立与Kafka集群的初始连接的host：port对列表', type: string}
                config: {description: 'MirrorMaker使用者配置。 无法设置具有以下前缀的属性: ssl., bootstrap.servers,
                    group.id, sasl., security., interceptor.classes (除了以下内容: ssl.endpoint.identification.algorithm, ssl.cipher.suites,
                    ssl.protocol, ssl.enabled.protocols).', type: object}
                groupId: {description: 唯一的字符串，用于标识此消费者所属的消费者组., type: string}
                numStreams: {description: 指定要创建的使用者流线程的数量，最小值：1, type: integer}
                offsetCommitInterval: {description: 指定偏移量自动提交间隔，以毫秒为单位，默认值为60000, type: integer}
                tls:
                  description: 用于将MirrorMaker连接到群集的TLS配置。
                  properties:
                    trustedCertificates:
                      description: TLS连接的受信任证书。
                      items:
                        properties:
                          certificate: {description: secret中文件证书名称, type: string}
                          secretName: {description: 包含文件证书的secret名称., type: string}
                        required: [certificate, secretName]
                        type: object
                      type: array
                  type: object
              required: [groupId, bootstrapServers]
              type: object
            image: {description: pod 的 docker镜像, type: string}
            jvmOptions:
              description: pod 的JVM 参数
              properties:
                -XX: {description: -XX选项到JVM的映射., type: object}
                -Xms: {description: JVM的-Xms选项., pattern: '[0-9]+[mMgG]?',
                  type: string}
                -Xmx: {description: JVM的-Xmx选项., pattern: '[0-9]+[mMgG]?',
                  type: string}
                gcLoggingEnabled: {description: 指定是否启用垃圾收集日志记录。 默认为false., type: boolean}
                javaSystemProperties:
                  description: 附加系统属性的映射，将使用-D选项传递给JVM.
                  items:
                    properties:
                      name: {description: 系统属性名称., type: string}
                      value: {description: 系统属性值., type: string}
                    type: object
                  type: array
              type: object
            livenessProbe:
              description: pod活动检查。
              properties:
                failureThreshold: {description: 探针的最小连续失败数。 默认值为3。最小值为1, type: integer}
                initialDelaySeconds: {description: '首先检查运行状况之前的初始延迟。最小值:0', type: integer}
                periodSeconds: {description: 执行探测的频率（以秒为单位）。 默认为10秒。 最小值为1., type: integer}
                successThreshold: {description:探针失败的最少连续成功次数将被视为成功。 默认值为1。为保持活力，必须为1。 最小值为1., type: integer}
                timeoutSeconds: {description: 每次尝试健康检查的超时时间，最小值：0, type: integer}
              type: object
            logging:
              description: MirrorMaker的日志记录配置。
              properties:
                loggers: {description: 从记录器名称到记录器级别的映射。, type: object}
                name: {description:从中获取日志配置的'ConfigMap'的名称., type: string}
                type:
                  description: 日志记录类型，必须为 'inline' or 'external'.
                  enum: [inline, external]
                  type: string
              required: [type]
              type: object
            metrics: {description: 'Prometheus JMX导出器配置。 有关此配置的结构的详细信息，请参见{JMXExporter}。',
              type: object}
            producer:
              description: 目标集群的配置。
              properties:
                abortOnSendFailure: {description: 用于将MirrorMaker设置为在失败的发送时退出的标志。 默认值为“ true”。, type: boolean}
                authentication:
                  description: 用于连接到集群的身份验证配置。
                  properties:
                    accessToken:
                      description: '链接到包含从授权服务器获得的访问令牌的Kubernetes Secret。'
                      properties:
                        key: {description: '存储在Kubernetes Secret中的密钥值', type: string}
                        secretName: {description: 包含密钥值的 secret 的名称., type: string}
                      required: [key, secretName]
                      type: object
                    accessTokenIsJwt: {description: 配置是否将访问令牌视为JWT。 如果授权服务器返回不透明令牌，则应将其设置为“ false”。 默认为true。, type: boolean}
                    certificateAndKey:
                      description: 引用包含证书和私钥对的secret.
                      properties:
                        certificate: {description: secret中文件证书名称, type: string}
                        key: {description:secret中私钥名称,
                          type: string}
                        secretName: {description: 包含证书的secret的名称., type: string}
                      required: [certificate, key, secretName]
                      type: object
                    clientId: {description: Kafka客户端可以用来对OAuth服务器进行身份验证并使用令牌端点URI的OAuth客户端ID., type: string}
                    clientSecret:
                      description: 链接到包含OAuth客户端密钥的Kubernetes密钥，Kafka客户端可使用该密钥对OAuth服务器进行身份验证并使用令牌端点URI.
                      properties:
                        key: {description: 存储在Kubernetes Secret中的密钥值。, type: string}
                        secretName: {description: 包含密钥值的secret的名称, type: string}
                      required: [key, secretName]
                      type: object
                    disableTlsHostnameVerification: {description: 启用或禁用TLS主机名验证。 默认值为“ false”, type: boolean}
                    maxTokenExpirySeconds: {description: 将访问令牌的生存时间设置或限制为指定的秒数。 如果授权服务器返回不透明令牌，则应设置此项.,
                      type: integer}
                    passwordSecret:
                      description: 引用包含密码的secret.
                      properties:
                        password: {description: Secret 中存储密码的密钥名称。, type: string}
                        secretName: {description: 包含的密码的Secret名称., type: string}
                      required: [password, secretName]
                      type: object
                    refreshToken:
                      description: 链接到包含刷新令牌的Kubernetes Secret，该刷新令牌可用于从授权服务器获取访问令牌。
                      properties:
                        key: {description: 存储在Kubernetes Secret中的密钥值., type: string}
                        secretName: {description: 包含密钥值的secret的名称., type: string}
                      required: [key, secretName]
                      type: object
                    scope: {description: 针对授权服务器进行身份验证时要使用的OAuth范围。 某些授权服务器要求对此进行设置。 可能的值取决于授权服务器的配置方式。 默认情况下，在执行令牌端点请求时未指定“作用域”。, type: string}
                    tlsTrustedCertificates:
                      description: TLS连接到OAuth服务器的受信任证书。
                      items:
                        properties:
                          certificate: {description: Secret中文件证书的名称., type: string}
                          secretName: {description: 包含文件证书的secret的名称, type: string}
                        required: [certificate, secretName]
                        type: object
                      type: array
                    tokenEndpointUri: {description:授权服务器令牌端点URI., type: string}
                    type:
                      description: 认证类型。 目前，唯一支持的类型是'tls'，'scram-sha-512'和'plain'。 'scram-sha-512'类型使用SASL SCRAM-SHA-512身份验证。 “ plain”类型使用SASL PLAIN身份验证。 oauth类型使用SASL OAUTHBEARER身份验证。 'tls'类型使用TLS客户端身份验证。 仅在TLS连接上支持'tls'类型。
                      enum: [tls, scram-sha-512, plain, oauth]
                      type: string
                    username: {description: 用于认证的用户名。,
                      type: string}
                  required: [type]
                  type: object
                bootstrapServers: {description: '用于建立与Kafka集群的初始连接的host:port对列表。', type: string}
                config: {description: 'MirrorMaker生产者配置。 无法设置具有以下前缀的属性: ssl., bootstrap.servers,
                    sasl., security., interceptor.classes (除了:
                    ssl.endpoint.identification.algorithm, ssl.cipher.suites, ssl.protocol,
                    ssl.enabled.protocols).', type: object}
                tls:
                  description: '用于将MirrorMaker连接到群集的TLS配置。'
                  properties:
                    trustedCertificates:
                      description: TLS连接的受信任证书。
                      items:
                        properties:
                          certificate: {description: secret中文件证书名称, type: string}
                          secretName: {description: 包含文件证书的secret的名称., type: string}
                        required: [certificate, secretName]
                        type: object
                      type: array
                  type: object
              required: [bootstrapServers]
              type: object
            readinessProbe:
              description: Pod 准备检查。
              properties:
                failureThreshold: {description: 探针的最小连续失败数。 默认值为3。最小值为1。, type: integer}
                initialDelaySeconds: {description: 首先检查运行状况之前的初始延迟。最小值：0, type: integer}
                periodSeconds: {description:执行探测的频率（以秒为单位）。 默认为10秒。 最小值为1., type: integer}
                successThreshold: {description:探针失败的最少连续成功次数将被视为成功。 默认值为1。为保持活力，必须为1。 最小值为1。, type: integer}
                timeoutSeconds: {description: '每次尝试进行健康检查的超时时间，最小值:0',type: integer}
              type: object
            replicas: {description: 'Deployment的pod数（最少）:1', type: integer}
            resources:
              description: 要保留的CPU和内存资源。
              properties:
                limits: {type: object}
                requests: {type: object}
              type: object
            template:
              description: '用于指定如何生成Kafka MirrorMaker资源，"deployment"和"pod"的模板。'
              properties:
                deployment:
                  description: Kafka MirrorMaker'Deployment'的模板.
                  properties:
                    metadata:
                      description: Metadata 应该应用于资源。
                      properties:
                        annotations: {description: '添加到资源模板的注释。 可以应用于不同的资源，例如“ StatefulSets”，“ Deployments”，“ Pods”和“ Services”。', type: object}
                        labels: {description: '添加到资源模板的标签。 可以应用于不同的资源，例如“ StatefulSets”，“ Deployments”，“ Pods”和“ Services”。',type: object} 
                      type: object
                  type: object
                mirrorMakerContainer:
                  description: Kafka MirrorMaker容器的模板。
                  properties:
                    env:
                      description: 应用于容器的环境变量。
                      items:
                        properties:
                          name: {description: 环境变量键., type: string}
                          value: {description: 环境变量值., type: string}
                        type: object
                      type: array
                    securityContext:
                      description: 容器的安全语境。
                      properties:
                        allowPrivilegeEscalation: {type: boolean}
                        capabilities:
                          properties:
                            add:
                              items: {type: string}
                              type: array
                            drop:
                              items: {type: string}
                              type: array
                          type: object
                        privileged: {type: boolean}
                        procMount: {type: string}
                        readOnlyRootFilesystem: {type: boolean}
                        runAsGroup: {type: integer}
                        runAsNonRoot: {type: boolean}
                        runAsUser: {type: integer}
                        seLinuxOptions:
                          properties:
                            level: {type: string}
                            role: {type: string}
                            type: {type: string}
                            user: {type: string}
                          type: object
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec: {type: string}
                            gmsaCredentialSpecName: {type: string}
                          type: object
                      type: object
                  type: object
                pod:
                  description: Kafka MirrorMaker'Pods'的模板。
                  properties:
                    affinity:
                      description: pod 亲和性规则
                      properties:
                        nodeAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  preference:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  weight: {type: integer}
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              properties:
                                nodeSelectorTerms:
                                  items:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchFields:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                    type: object
                                  type: array
                              type: object
                          type: object
                        podAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  weight: {type: integer}
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels: {type: object}
                                    type: object
                                  namespaces:
                                    items: {type: string}
                                    type: array
                                  topologyKey: {type: string}
                                type: object
                              type: array
                          type: object
                        podAntiAffinity:
                          properties:
                            preferredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  podAffinityTerm:
                                    properties:
                                      labelSelector:
                                        properties:
                                          matchExpressions:
                                            items:
                                              properties:
                                                key: {type: string}
                                                operator: {type: string}
                                                values:
                                                  items: {type: string}
                                                  type: array
                                              type: object
                                            type: array
                                          matchLabels: {type: object}
                                        type: object
                                      namespaces:
                                        items: {type: string}
                                        type: array
                                      topologyKey: {type: string}
                                    type: object
                                  weight: {type: integer}
                                type: object
                              type: array
                            requiredDuringSchedulingIgnoredDuringExecution:
                              items:
                                properties:
                                  labelSelector:
                                    properties:
                                      matchExpressions:
                                        items:
                                          properties:
                                            key: {type: string}
                                            operator: {type: string}
                                            values:
                                              items: {type: string}
                                              type: array
                                          type: object
                                        type: array
                                      matchLabels: {type: object}
                                    type: object
                                  namespaces:
                                    items: {type: string}
                                    type: array
                                  topologyKey: {type: string}
                                type: object
                              type: array
                          type: object
                      type: object
                    imagePullSecrets:
                      description: 引用同一命名空间中的secret列表，用于拉出此Pod使用的镜像。
                      items:
                        properties:
                          name: {type: string}
                        type: object
                      type: array
                    metadata:
                      description: 'Metadata 应用于资源。'
                      properties:
                        annotations: {description: '添加到资源模板的注释。 可以应用于不同的资源，例如StatefulSets，Deployments，Pods和Service。', type: object}
                        labels: {description: '添加到资源模板的标签。 可以应用于不同的资源，例如StatefulSets，Deployments，Pods和Service。', type: object}
                      type: object
                    priorityClassName: {description: 'priorityClass（优先级调度）的名称。', type: string}
                    schedulerName: {description: '用于调度此Pod的调度程序的名称。 如果未指定，将使用默认的调度程序。', type: string}
                    securityContext:
                      description: 配置pod-level安全属性和通用
                        container settings.
                      properties:
                        fsGroup: {type: integer}
                        runAsGroup: {type: integer}
                        runAsNonRoot: {type: boolean}
                        runAsUser: {type: integer}
                        seLinuxOptions:
                          properties:
                            level: {type: string}
                            role: {type: string}
                            type: {type: string}
                            user: {type: string}
                          type: object
                        supplementalGroups:
                          items: {type: integer}
                          type: array
                        sysctls:
                          items:
                            properties:
                              name: {type: string}
                              value: {type: string}
                            type: object
                          type: array
                        windowsOptions:
                          properties:
                            gmsaCredentialSpec: {type: string}
                            gmsaCredentialSpecName: {type: string}
                          type: object
                      type: object
                    terminationGracePeriodSeconds: {description: 宽限期是指在POD中运行的进程被发送终止信号后的持续时间（以秒为单位），以及通过终止信号强制停止进程的时间。 将此值设置为比您的进程的预期清除时间长。该值必须为非负整数。 零值表示立即删除。 默认为30秒，最小：0, type: integer}
                    tolerations:
                      description: pod 容忍度
                      items:
                        properties:
                          effect: {type: string}
                          key: {type: string}
                          operator: {type: string}
                          tolerationSeconds: {type: integer}
                          value: {type: string}
                        type: object
                      type: array
                  type: object
                podDisruptionBudget:
                  description: 'Kafka MirrorMaker PodDisruptionBudget的模板。'
                  properties:
                    maxUnavailable: {description: '允许自动Pod逐出的最大可用pod数量。 逐出后，如果pod的“ maxUnavailable”个数或更少不可用，则允许逐出Pod。 将此值设置为0可防止所有自愿驱逐，因此必须手动驱逐吊舱。 默认为1.', minimum: 0, type: integer}
                    metadata:
                      description: 'Metadata 应用于PodDistruptionBugetTemplate resource.'
                      properties:
                        annotations: {description: '添加到资源模板的注释。 可以应用于不同的资源，例如StatefulSets，Deployments，Pods和Service。', type: object}
                        labels: {description: '添加到资源模板的标签。 可以应用于不同的资源，例如StatefulSets，Deployments，Pods和Service。', type: object}
                      type: object
                  type: object
              type: object
            tolerations:
              description: pod 容忍度
              items:
                properties:
                  effect: {type: string}
                  key: {type: string}
                  operator: {type: string}
                  tolerationSeconds: {type: integer}
                  value: {type: string}
                type: object
              type: array
            tracing:
              description: Kafka MirrorMaker中的跟踪配置。
              properties:
                type:
                  description: 使用的跟踪类型。 当前唯一支持的类型是Jaeger跟踪的“ jaeger”。
                  enum: [jaeger]
                  type: string
              required: [type]
              type: object
            version: {description: 'Kafka MirrorMaker版本。 默认为{DefaultKafkaVersion}。 请查阅文档以了解升级或降级版本所需的过程。', type: string}
            whitelist: {description: '包含用于镜像的主题列表。 此选项允许使用Java样式的正则表达式的任何正则表达式。 通过使用白名单A|B，可以实现两个名为A和B的主题的镜像。或者，作为特殊情况，您可以使用白名单“*”来镜像所有主题。 您还可以指定多个以逗号分隔的正则表达式。', type: string}
          required: [replicas, whitelist, consumer, producer]
          type: object
        status:
          description: Kafka MirrorMaker的状态。
          properties:
            conditions:
              description: 状态条件清单.
              items:
                properties:
                  lastTransitionTime: {description: '上一次类型的条件从一种状态更改为另一种状态。 所需格式为“ yyyy-MM-ddTHH：mm：ssZ”（以UTC时区为准）', type: string}
                  message: {description: '可读的消息，指示有关条件的最后转换的详细信息', type: string}
                  reason: {description:条件最后一次转换的原因（CamelCase中的一个单词）., type: string}
                  status: {description: '条件的状态 True, False or Unknown.', type: string}
                  type: {description: '条件的唯一标识符，用于区分资源中的其他条件。', type: string}
                type: object
              type: array
            observedGeneration: {description: 最后由操作员核对的CRD的生成。, type: integer}
          type: object
  version: v1beta1
  versions:
  - {name: v1beta1, served: true, storage: true}
  - {name: v1alpha1, served: true, storage: false}

